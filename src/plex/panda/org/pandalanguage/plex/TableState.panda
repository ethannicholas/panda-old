package org.pandalanguage.plex

class TableState : State {
    var inverse:Bit
    var accept:ImmutableArray<Bit>

    constructor(inverse:Bit, accept:ImmutableArray<Bit>, next:Int...) {
        super.constructor(new ImmutableArray<Int>(next, 0, next.length))
        self.inverse := inverse
        self.accept := accept
    }

    @override
    function accept(c:Char):Bit {
        var i := c->(Int)
        var value:Bit
        if i < accept.length
            value := accept[i]
        else
            value := false
        return value ~ inverse
    }

    @override
    function ->>():String {
        var result := new MutableString()
        result.append("new TableState(")
        result.append(inverse)
        result.append(", new ImmutableArray<Bit>(")
        for i in 0 ... accept.length - 1 {
            if i > 0
                result.append(", ")
            result.append(accept[i])
        }
        result.append(")")
        for i in 0 ... next.length - 1 {
            result.append(", ")
            result.append(next[i])
        }
        result.append(")")
        return result->>(String)
    }
}
