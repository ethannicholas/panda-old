-- This is a bit of a weird case: we inherit the same method from two different
-- sources, with two different preconditions. The rule for handling this is we
-- 'and' all of the preconditions within a class, and 'or' all of the
-- preconditions between classes. So it should work as long as you fulfill the
-- preconditions for either one of the interfaces.

interface Intf1 {
    @pre(x > 0)
    method tricky(x:Int, y:Int):Int
}

interface Intf2 {
    @pre(y > 0)
    method tricky(x:Int, y:Int):Int
}

class Test (Intf1, Intf2) {
    @override
    method tricky(x:Int, y:Int):Int {
        return x * y
    }
}

var t := new Test()
t.tricky(1, -1)
t.tricky(-1, 1)
try {
    t.tricky(-1, -1)
}
catch e:PreconditionError {
    Console.writeLine("success")
}