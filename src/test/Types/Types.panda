class TypeConversions {
    @class 
    function test(c:Char):Char {
        return (c->>(Int32) + 1)->>(Char)
    }
    
    @class 
    function test(i8:Int8):Int8 {
        return (i8 + 1)->>(Int8)
    }
       
    @class 
    function type(i:Int8):String {
        return "Int8"
    }

    @class 
    function type(i:Int16):String {
        return "Int16"
    }

    @class 
    function type(i:Int32):String {
        return "Int32"
    }

    @class 
    function type(i:Int64):String {
        return "Int64"
    }

    @class 
    function type(r:Real32):String {
       return "Real32"
    }
       
    @class 
    function type(r:Real64):String {
       return "Real64"
    }

    @class 
    method main() {
        var i8:Int8 := -128
        assert i8->>(String) = "-128"
        i8 := 127
        assert i8->>(String) = "127"
        assert type(127) = "Int8"
        
        var i16:Int16 := -32768
        assert i16->>(String) = "-32768"
        i16 := 32767
        assert i16->>(String) = "32767"
        assert type(32767) = "Int16"

        var i32:Int32 := -2147483648
        assert i32->>(String) = "-2147483648"
        i32 := 2147483647
        assert i32->>(String) = "2147483647"
        assert type(2147483647) = "Int32"
        
        var i64:Int64 := -9223372036854775808
        assert i64->>(String) = "-9223372036854775808"
        i64 := 9223372036854775807
        assert i64->>(String) = "9223372036854775807"
        
        var c:Char := "A"
        assert c = "A"
        assert c->>(String) = "A"
        assert c->>(Int8) = 65
        assert "A"->>(Int8) = 65
        
        assert test(c) = "B"
        assert test("B") = "C"
        assert test(64->>(Char)) = c
        
        assert test("\t")->(Int) = 10
        
        i8 := 42
        assert test(i8) = 43
        assert test(43) = 44
        
        assert 67.5->>(Int8) = 67
        
        assert type(32.5) = "Real64"
        var r64:Real64 := 32.5
        assert type(r64) = "Real64"
        var r32:Real32 := 12.3
        assert type(r32) = "Real32"
        var ru := 32.5
        assert type(ru) = "Real64"
        var r:Real := 32
        assert type(r) = "Real64"
        
        Console.writeLine("Success")
    }
}