Thread.context["queue"] := MessageQueue<String>()
Thread.start(method() {
	def queue := Thread.context["queue"]->MessageQueue<String>
	-- wait for Thread2 to signal that it's ready
	queue.getMessage()
	-- ensure that our context is independent of the change made by Thread2
	queue := Thread.context["queue"]->MessageQueue<String>
	Console.writeLine(queue.getMessage())
})
Thread.start(method() {
	def queue := Thread.context["queue"]->MessageQueue<String>
	-- modify our context
	Thread.context["queue"] := MessageQueue<String>()
	-- cause Thread1 to re-fetch its queue, ensuring that it doesn't see the
	-- change we made to our context
	queue.post("ready")
	-- post a message to the original queue
	queue.post("Hello, World!")
})
