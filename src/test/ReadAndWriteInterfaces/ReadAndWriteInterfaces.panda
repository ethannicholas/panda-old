interface TestView {
    function [](k:Int):Int

    function [..]():Object

    function key():Int
}

interface Test : TestView {
    method []:=(k:Int, v:Int)

    method [..]:=(o:Object)

    @self
    method key:=(v:Int)
}

class Foo (Test) {
    @override
    function [](k:Int):Int {
        return 12
    }

    @override
    method []:=(k:Int, v:Int) {
        Console.writeLine("[{}] := {}", k, v)
    }

    @override
    function [..]():Object {
        return "slice"
    }

    @override
    method [..]:=(o:Object) {
        Console.writeLine("slice := \{o}")
    }

    @override
    function key():Int {
        return 42
    }

    @override
    @self
    method key:=(v:Int) {
        Console.writeLine("key := \{v}")
    }
}

var foo:Test := new Foo()
foo[5] := 7
foo[..] := "test"
foo.key := 17

foo[5] += 2
foo.key += 42
