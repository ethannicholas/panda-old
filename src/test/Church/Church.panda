-- FIXME only operating on Ints for now, extend this to arbitrary types when
-- generics are finished

@pre(x >= 0)
function church(x:Int):((Int)=>(Int))=>((Int)=>(Int)) {
    if x = 0
        return f => x => x
    return add(f => f, church(x - 1))
}

function add(a:((Int)=>(Int))=>((Int)=>(Int)), b:((Int)=>(Int))=>((Int)=>(Int))):((Int)=>(Int))=>((Int)=>(Int)) {
    return f => x => a(f)(b(f)(x))
}

function mul(a:((Int)=>(Int))=>((Int)=>(Int)), b:((Int)=>(Int))=>((Int)=>(Int))):((Int)=>(Int))=>((Int)=>(Int)) {
    return f => x => a(b(f))(x)
}

function unchurch(x:((Int)=>(Int))=>((Int)=>(Int))):Int {
    return x(1.+)(0)
}

def a := church(5)
Console.writeLine(unchurch(a))
def b := church(8)
Console.writeLine(unchurch(b))
Console.writeLine(unchurch(add(a, b)))
Console.writeLine(unchurch(mul(a, b)))
Console.writeLine(unchurch(mul(add(a, a), b)))
