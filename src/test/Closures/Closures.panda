class Closures {
    def field1 := "Field1"
    var field2 := 0
    constant field3 := "Field3"
    var field4 := 10

    function test1():()=&>(Int) {
        return method():Int {
            self.field2 += 1
            return self.field2
        }
    }

    function test2(x:Int):(Int)=>*(Int) {
        return y:Int => x * y 
    }

    function test3():(String)=>(String) {
        def local1 := "Local1"
        def local2 := "Local2"
        return function(s:String):String {
            return local1 + s + local2 + self.field1 + field3
        }
    }

    method test4() {
        def deep1 := a:Int => b:Int => c:Int => d:Int => a + b + c + d
        assert deep1(1)(2)(3)(4) = 10
        def deep2 := a:Int => b:Int => c:Int => d:Int => a + b + c + d + 
                self.field4
        assert deep2(1)(2)(3)(4) = 20
        def deep3 := function(a:Int):(Int)=>((Int)=>((Int)=>(Int))) {
            return function(b:Int):(Int)=>((Int)=>(Int)) {
                return function(c:Int):(Int)=>(Int) {
                    return function(d:Int):Int {
                        return a + b + c + d
                    }
                }
            }
        }
        assert deep3(1)(2)(3)(4) = 10
        def deep4 := function(a:Int):(Int)=>((Int)=>((Int)=>(Int))) {
            return function(b:Int):(Int)=>((Int)=>(Int)) {
                return function(c:Int):(Int)=>(Int) {
                    return function(d:Int):Int {
                        return a + b + c + d + self.field4
                    }
                }
            }
        }
        assert deep4(1)(2)(3)(4) = 20
    }

    @class
    method main() {
        def test := Closures()
        def counter := test.test1()
        assert counter() = 1
        assert counter() = 2
        assert counter() = 3

        def times5 := test.test2(5)
        assert times5(5) = 25
        assert times5(9) = 45
        assert times5(12) = 60

        def string := test.test3()
        assert string("Parameter") = "Local1ParameterLocal2Field1Field3"

        test.test4()

        Console.writeLine("success")
    }
}