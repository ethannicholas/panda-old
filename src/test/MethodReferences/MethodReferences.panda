class Test {
    @class
    function a():String {
        return "I'm 'a'!"
    }

    method b():(String, String) {
        return ("I'm", "'b'!")
    }

    function c(a:()=>(String)):String {
        return a() + "... as interpreted by 'c1'!"
    }

    @class
    method c(s:String):String {
        return "And another variant of 'c' says '\{s}'!"
    }
}

def context := Test()
def a := Test::a
def b := Test::b
def c1 := Test::c(()=>(String))
def c2 := Test::c(String)

Console.writeLine(a())
def t := b(context)
Console.writeLine("\{t[0]} \{t[1]}")
Console.writeLine(c1(context, a))
assert (Int32::+)(12, 6) = 18
def sqrt := Real::sqrt
assert sqrt(64) = 8
Console.writeLine(c2("success"))