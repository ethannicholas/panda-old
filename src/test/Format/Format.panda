class Format {
    @override
    @preOr(true)
    function format(fmt:String):String {
        return fmt
    }
}

def x := 42
Console.writeLine("Simple: {}", x)
Console.writeLine("Multiple: {1}, {0}", x, x * 10)
Console.writeLine("Centered: {,#^5}", x - 3)
Console.writeLine("Left {,#<5} Left", x^2)
Console.writeLine("{,>6} Right", x)
Console.writeLine("Braces! {,\\}^10}", x // 10)
Console.writeLine("Colons! {,\\:^10}", "colons")
Console.writeLine("Backslashes! {,\\\\^15}", true | false)
def f := Format()
Console.writeLine("Format: {:format}", f)
Console.writeLine("Escaped format: {:\\}\\\\\\:f}", f)
Console.writeLine("}Braces\\{ \\{ {} }!", "everywhere")
Console.writeLine("Field and format: {1,!<10:W00T}", "ignored", f)
Console.writeLine("Internal escapes:\n    {,\n^13:newline\\:'\n'}", f)

Console.writeLine("Simple: \{x}")
Console.writeLine("Multiple: \{x * 10}, \{x}")
Console.writeLine("Centered: \{x - 3,#^5}")
Console.writeLine("Left \{x ^ 2,#<5} Left")
Console.writeLine("\{x,>6} Right")
Console.writeLine("Braces! \{x // 10,\}^10}")
Console.writeLine("Colons! \{'colons',\:^10}")
Console.writeLine("Backslashes! \{  true | false ,\\^15}")
Console.writeLine("Format: \{f:format}")
Console.writeLine("Escaped format: \{f:\}\\\:f}")
Console.writeLine("}Braces\\{ \\{ \{f:everywhere} }!")
Console.writeLine("Field and format: \{f,!<10:W00T}")
Console.writeLine("Internal escapes:\n    \{f,\n^13:newline\:'\n'}", f)