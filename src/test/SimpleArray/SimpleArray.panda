class SimpleArray {
    constant a := [1, 2, 3, 4, 5]
    constant b := [[1, 2], [3, 4], [5]]
    constant c:ImmutableArray<ImmutableArray<Real>> := [[1, 2], [3, 4], [5]]
    constant d := [[[[[1]]]]]

    var e := [1, 2, 3, 4, 5]
    var f:Array<Int8> := [1, 2, 3, 4, 5]
    var g := [[1, 2], [3, 4]]
    var h:Array<Array<Int64>> := [[1, 2], [3, 4]]
    var i := []
    var j:Array<Array<ImmutableArray<Int16>>> := [[[129, 200], []]]

    @class
    method testCall(a:Array<Object>) {
        Console.writeLine("success")
    }

    @class
    method main() {
        assert a.class = class(ImmutableArray<Int32>)
        assert a.length = 5 & a[3] = 4
        assert b.class = class(ImmutableArray<ImmutableArray<Int32>>)
        assert c.class = class(ImmutableArray<ImmutableArray<Real>>)
        assert d.class = class(ImmutableArray<ImmutableArray<ImmutableArray<ImmutableArray<ImmutableArray<Int32>>>>>)

        var test := new SimpleArray()
        assert test.e.class = class(Array<Int32>)
        assert test.f.class = class(Array<Int8>)

        test.e := [1, 2, 3]
        assert test.e.class = class(Array<Int32>)
        test.f := [1, 2, 3]
        assert test.f.class = class(Array<Int8>)

        assert test.g.class = class(Array<Array<Int32>>)
        assert test.h.class = class(Array<Array<Int64>>)
        assert test.i.class = class(Array<Object?>)

        assert ["Hello", "Goodbye"].class = class(Array<String>)

        assert test.j.class = class(Array<Array<ImmutableArray<Int16>>>)

        assert ["ABC", "A"].class = class(Array<String>)
        assert [1.2, 1].class = class(Array<Real>)
        assert [].class = class(Array<Object?>)

        testCall([1, 2, 3])
    }
}

