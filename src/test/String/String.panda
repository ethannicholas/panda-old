-- [] --
var s := "Hello, World!"
for i in 0 .. s.length
    Console.write(s[i])
Console.writeLine()

-- startsWith --

assert s.startsWith("Hello")
assert !s.startsWith("Goodbye")
assert !"Short".startsWith(s)

-- endsWith --

assert s.endsWith("World!")
assert !s.endsWith("Nurse!")
assert !"Short".endsWith(s)

-- slice --

assert s[0 .. 5] = "Hello"
assert s[..5] = "Hello"
assert s[7..] = "World!"
assert s[s.length..] = ""
assert s[s.length .. s.length] = ""
assert s[0 .. 0] = ""

-- + --

assert "Hello" + ", " + "World!" = s
assert "Hello" + 123 = "Hello123"
assert "" + "Hello" + "" = "Hello"

-- * --

assert s * 3 = s + s + s
assert s * 0 = ""

-- indexOf --

assert s.indexOf("Hello") = 0
assert s.indexOf("o") = 4
assert s.indexOf("o", 4) = 4
assert s.indexOf("o", 5) = 8
assert s.indexOf("o", 9) = null
assert s.indexOf("World") = 7
assert s.indexOf("World", s.length) = null
assert s.indexOf("Not found") = null
assert s.indexOf("Hello, World! Now with extra cheese!") = null
assert s.indexOf(",") = 5
assert s.indexOf("") = 0

-- contains --

assert s.contains("Hello")
assert s.contains("")
assert !s.contains("Goodbye")
assert !s.contains("This string is much longer than the original")

-- contains(regex) --

assert s.contains(/e(l+)/)
assert !s.contains(/l(e+)/)

-- matchCount --

assert "hello".matchCount("h") = 1 : "1"
assert "hello".matchCount("e") = 1 : "2"
assert "hello".matchCount("l") = 2 : "3"
assert "hello".matchCount("o") = 1 : "4"
assert "hello".matchCount("H") = 0 : "5"
assert "hello".matchCount("hell") = 1 : "6"
assert "hello".matchCount("hello") = 1 : "7"
assert "aaaa".matchCount("") = 5 : "8"
assert "aaaa".matchCount("a") = 4 : "9"
assert "aaaa".matchCount("aa") = 2 : "10"
assert "aaaa".matchCount("aa", false) = 2 : "11"
assert "aaaa".matchCount("aa", true) = 3 : "12"
assert "aaaa".matchCount("aaaa") = 1 : "13"
assert "aaaa".matchCount("aaaa", false) = 1 : "14"
assert "aaaa".matchCount("aaaa", true) = 1 : "15"
assert "aaaa".matchCount("aaaaa") = 0 : "16"
assert "aaaa".matchCount("aaaaa", false) = 0 : "17"
assert "aaaa".matchCount("aaaaa", true) = 0 : "18"
assert "hello".matchCount(/\w+/) = 1 : "19"
assert "hello".matchCount(/\w+/, false) = 1 : "20"
assert "hello".matchCount(/\w+/, true) = 5 : "21"
assert "hello".matchCount(/h/) = 1 : "22"
assert "hello".matchCount(/[el]/) = 3 : "23"
assert "hello".matchCount(/Q?/, false) = 6 : "24"
assert "hello".matchCount(/Q?/, true) = 6 : "25"
assert "hello".matchCount(/Q/) = 0 : "26"
assert "hello".matchCount(/Q/, false) = 0 : "27"
assert "hello".matchCount(/Q/, true) = 0 : "28"

-- convert():Array<Char> --

var c:Array<Char> := s.convert()->Array<Char>
for i in 0 .. c.count
    Console.write(c[i])
Console.writeLine()

-- split --

var split := "Hello/World!".split("/")
assert split[0] = "Hello"
assert split[1] = "World!"
assert split.count = 2

split := "--hello--world----test--".split("--")
assert split[0] = ""
assert split[1] = "hello"
assert split[2] = "world"
assert split[3] = ""
assert split[4] = "test"
assert split[5] = ""
assert split.count = 6

split := "1,2,3,4,5,6".split(",", 2)
assert split[0] = "1"
assert split[1] = "2,3,4,5,6"
assert split.count = 2

split := "Hello".split("", 3)
assert split[0] = "H"
assert split[1] = "e"
assert split[2] = "llo"
assert split.count = 3

-- split (regex) --

split := "1;2,3;4".split(/[;,]/)
assert split[0] = "1"
assert split[1] = "2"
assert split[2] = "3"
assert split[3] = "4"
assert split.count = 4

split := "1234".split(/,?/)
assert split[0] = ""
assert split[1] = "1"
assert split[2] = "2"
assert split[3] = "3"
assert split[4] = "4"
assert split.count = 5

-- trim --

assert "  \n Hello, World! \r\t  ".trim() = s
assert "     ".trim() = ""
assert "".trim() = ""

-- replace --

assert "Hello, World!".replace("o", "123") = "Hell123, W123rld!"
assert "123456789".replace("0123", "456") = "123456789"
assert "123456789".replace("123", "456") = "456456789"
assert "123456789".replace("789", "456") = "123456456"
assert "aaaaaaaaa".replace("a", "b") = "bbbbbbbbb"
assert "aa".replace("aaa", "bbb") = "aa"

-- replace(regex) --

assert "Hello, World!".replace(/[, !]/, "") = "HelloWorld"
assert "123, 456, 789".replace(/\d+/, "<<$0>>") = "<<123>>, <<456>>, <<789>>"
assert "123, 456, 789".replace(/(\d+)/, "<<$1>>") = "<<123>>, <<456>>, <<789>>"
assert "no matches!".replace(/\d+/, "oops!") = "no matches!"
assert "Hello".replace(/q?/, "q") = "qHqeqlqlqo"
assert "123".replace(/\d/, "$0") = "123"
assert "123".replace(/\d/, "$1") = "$1$1$1"
assert "123".replace(/(\d)/, "$12") = "122232"
assert "123".replace(/\d/, "$01") = "112131"

-- parse --

var parsed := "1, 2, 34".parse(/(\d+),\s*(\d+),\s*(\d+)/)
assert parsed != null
assert parsed.count = 3
assert parsed[0] = "1"
assert parsed[1] = "2"
assert parsed[2] = "34"

parsed := "Hello, world!".parse(/no match/)
assert parsed = null

-- left --

var hello := "hello"
assert hello.left(0) = hello
assert hello.left(5) = hello
assert hello.left(6) = "hello "
assert hello.left(10, "*") = "hello*****"
assert "".left(20, "A") = "A" * 20

-- right --

assert hello.right(0) = hello
assert hello.right(5) = hello
assert hello.right(6) = " hello"
assert hello.right(10, "*") = "*****hello"
assert "".right(20, "A") = "A" * 20

-- center --

assert hello.center(0) = hello
assert hello.center(5) = hello
assert hello.center(7) = " hello "
assert hello.center(10, "*") = "**hello***"
assert "".center(20, "A") = "A" * 20

-- convert():Int? --

assert "661".convert()->Int? = 661
assert "-1359".convert()->Int? = -1359
assert s.convert()->Int? = null
assert "".convert()->Int? = null
assert "-12m".convert()->Int? = null
assert "12m".convert()->Int? = null

-- format --

assert "Hello".convert()->String = "Hello"
assert "Hello".format("panda") = '"Hello"'
assert "\tHe\"llo\n\\".format("panda") = '"\\tHe\\"llo\\n\\\\"'

Console.writeLine("success")