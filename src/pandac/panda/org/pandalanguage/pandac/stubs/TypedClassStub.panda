package org.pandalanguage.pandac.stubs

uses org.pandalanguage.pandac.parser.ParseNode
uses org.pandalanguage.pandac.tree.Annotations
uses org.pandalanguage.pandac.tree.Position
uses org.pandalanguage.pandac.types.Type

================================================================================
Represents a parsed but not-yet-compiled class after symbol resolution.
================================================================================
class TypedClassStub : ClassStub {
    def superclass:Type?

    def interfaces:ImmutableArray<Type>

    def methods:ImmutableArray<TypedMethodStub>

    def fields:ImmutableArray<TypedFieldStub>

    def genericParameters:ImmutableArray<Type>

    constructor(position:Position, name:String, isInterface:Bit, 
            annotations:Annotations, packageUses:CollectionView<String>,
            classAliases:MapView<String, String>, superclass:Type?, 
            interfaces:ListView<Type>, methods:ListView<TypedMethodStub>,
            fields:ListView<TypedFieldStub>, invariants:ListView<ParseNode>,
            genericParameters:ListView<Type>) {
        super.constructor(position, name, isInterface, annotations, packageUses,
                classAliases, invariants)
        self.superclass := superclass
        self.interfaces := new ImmutableArray<Type>(interfaces)
        self.methods := new ImmutableArray<TypedMethodStub>(methods)
        self.fields := new ImmutableArray<TypedFieldStub>(fields)
        self.genericParameters := new ImmutableArray<Type>(genericParameters)
    }

    @override
    function format(fmt:String):String {
        return "\{name}(\{fields}, \{methods})"
    }
}