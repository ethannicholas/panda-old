package org.pandalanguage.pandac.stubs

uses org.pandalanguage.pandac.parser.ParseNode
uses org.pandalanguage.pandac.tree.Annotations
uses org.pandalanguage.pandac.tree.VariableType
uses org.pandalanguage.pandac.tree.Position

================================================================================
Represents a parsed but not-yet-compiled field.
================================================================================
@abstract
class FieldStub : Stub {
    def name:String

    def annotations:Annotations

    def fieldType:VariableType

    def initialValue:ParseNode?

    def tuplePosition:Int?

    @invariant(tuplePosition = null | initialValue != null)

    constructor(position:Position, name:String, annotations:Annotations,
            fieldType:VariableType, initialValue:ParseNode?,
            tuplePosition:Int?) {
        super.constructor(position)
        self.name := name
        self.annotations := annotations
        self.fieldType := fieldType
        self.initialValue := initialValue
        self.tuplePosition := tuplePosition
    }

    @abstract
    function typeName():String?

    @override
    function format(fmt:String):String {
        def result := new MutableString()
        switch fieldType {
            case VariableType.VAR: result.append("var ")
            case VariableType.DEF: result.append("def ")
            case VariableType.CONSTANT: result.append("constant ")
            case VariableType.PROPERTY: result.append("property ")
        }
        result.append(name)
        if typeName != null {
            result.append(":")
            result.append(typeName->(String))
        }
        if initialValue != null {
            result.append(" := ")
            result.append(initialValue)
        }
        if tuplePosition != null {
            result.append("[")
            result.append(tuplePosition)
            result.append("]")
        }
        return result->>(String)
    }
}