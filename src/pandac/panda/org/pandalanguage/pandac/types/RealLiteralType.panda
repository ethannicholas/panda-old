package org.pandalanguage.pandac.types

uses org.pandalanguage.pandac.tree.MethodNode

================================================================================
The compile-time type of a real literal, which the compiler must eventually 
choose to convert either to a `Real32` or a `Real64`.
================================================================================
class RealLiteralType : SpecialType {
    constant REAL32_CAST_COST := 4
    constant REAL64_CAST_COST := 0
    constant REAL_LITERAL := new RealLiteralType("<Real>")

    @private
    constructor(name:String) {
        super.constructor(name)
    }

    @override
    method canExplicitCastTo(target:Type):Bit {
        return RealType.REAL32.canExplicitCastTo(target) |
                RealType.REAL64.canExplicitCastTo(target)
    }
    
    @override
    method implicitCastCost(target:Type):Int {
        if target = RealType.REAL32
            return REAL32_CAST_COST
        if target = RealType.REAL64
            return REAL64_CAST_COST
        return RealType.REAL64.wrapperVersion().implicitCastCost(target)
    }

    @override
    method findConverterTo(target:Type):MethodNode? {
        var result := RealType.REAL64.findConverterTo(target)
        if result != null
            return result
        return RealType.REAL32.findConverterTo(target)
    }

    @override
    function isReal():Bit {
        return true
    }

    @override
    function isNumber():Bit {
        return true
    }

    @override
    function isNumeric():Bit {
        return true
    }

    @override
    function unwrapRealLiteral():PrimitiveType {
        return RealType.REAL64
    }

    @override
    function variableType():Type {
        return unwrapRealLiteral
    }
}
