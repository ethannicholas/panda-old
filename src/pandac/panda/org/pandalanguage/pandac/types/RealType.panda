package org.pandalanguage.pandac.types

uses org.pandalanguage.pandac.compiler.Context

================================================================================
The two `Real` types.
================================================================================
class RealType : PrimitiveType {
    constant REAL32 := new RealType(4)

    constant REAL64 := new RealType(8)
    
    @private
    constructor(size:Int) {
        super.constructor("panda.core.Real" + size * 8, size)
    }

    @override
    function isReal():Bit {
        return true
    }

    @override
    function isNumeric():Bit {
        return true
    }

    @override
    function isNumber():Bit {
        return true
    }

    @override
    function implicitCastCost(context:Context, target:Type):Int? {
        if target.isReal {
            if target->>(PrimitiveType).size < size
                return null
            var s := size
            var result := 0
            while s < target->(PrimitiveType).size {
                s *= 2
                result += 1
            }
            return result
        }
        else if target.isWrapper {
            var result := implicitCastCost(context, target->>(PrimitiveType))
            if result != null & target.isNullable
                result += NullableType.TO_NULLABLE_CAST_COST
            return result
        }
        if !target.isWrapper & !target.isPrimitive {
            return self->>(WrapperType).implicitCastCost(context, 
                    target)
        }
        return null
    }

    @override
    function canExplicitCastTo(context:Context, target:Type):Bit {
        if target.isPrimitive | target.isWrapper
            return target->>(PrimitiveType).isNumber
        return super.canExplicitCastTo(context, target)
    }

    @override
    function ->>():WrapperType {
        switch self {
            case REAL32:  return WrapperType.REAL32_WRAPPER
            case REAL64:  return WrapperType.REAL64_WRAPPER
            default: unreachable
        }
    }
}
