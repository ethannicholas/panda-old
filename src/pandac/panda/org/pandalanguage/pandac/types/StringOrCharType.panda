package org.pandalanguage.pandac.types

uses org.pandalanguage.pandac.compiler.Context
uses org.pandalanguage.pandac.tree.MethodNode

================================================================================
The compile-time type of a single-character string literal, which the compiler
must eventually choose to convert either to a `String` or a `Char`.
================================================================================
class StringOrCharType : SpecialType {
    constant STRING_OR_CHAR := StringOrCharType("$StringOrChar")

    @private
    constructor(name:String) {
        super.constructor(name)
    }

    @override
    function preferredVariableType():Type {
        return CharType.CHAR
    }

    @override
    function implicitCastCost(context:Context, t:Type):Int? {
        def char := CharType.CHAR.implicitCastCost(context, t)
        def string := ClassType.STRING.implicitCastCost(context, t)
        if char = null
            return string
        if string = null
            return char
        return char.min(string)
    }

    @override
    function canExplicitCastTo(context:Context, t:Type):Bit {
        return CharType.CHAR.canExplicitCastTo(context, t) |
                ClassType.STRING.canExplicitCastTo(context, t)
    }

    @override
    function ->>():ClassType {
        return ClassType.STRING
    }
}
