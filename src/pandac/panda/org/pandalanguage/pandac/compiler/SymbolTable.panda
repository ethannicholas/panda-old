package org.pandalanguage.pandac.compiler

uses org.pandalanguage.pandac.stubs.Methods
uses org.pandalanguage.pandac.stubs.Symbol

class SymbolTable (Map<String, Symbol>) {
    @private
    def symbols:Map<String, Symbol>

    constructor() {
        symbols := new HashMap<String, Symbol>()
    }

    constructor(symbols:MapView<String, Symbol>) {
        self.symbols := new OrderedMap<String, Symbol>(symbols)
    }

    @override
    function [](name:String):Symbol? {
        return symbols[name]
    }

    @override
    @self
    method []:=(name:String, s:Symbol) {
        --assert symbols[name] = null : "symbol '\{s}' was already defined"
        symbols[name] := s
    }

    @override
    @safeReturn
    function iterator():Iterator<(String, Symbol)> {
        return symbols.iterator
    }

    @override
    function contains(name:String):Bit {
        return self[name] != null
    }

    @override
    function length():Int {
        return symbols.length
    }

    @override
    method remove(name:String) {
        symbols.remove(name)
    }

    @override
    method clear() {
        symbols.clear()
    }

    @override
    method addAll(map:MapView<String, Symbol>) {
        for (k, v) in map {
            if v-?>(Methods) {
                var methods := v->(Methods)
                def existing := self[k]
                if existing-?>(Methods) {
                    var oldMethods := existing->(Methods)
                    oldMethods += methods
                    methods := oldMethods
                }
                self[k] := methods
            }
            else
                self[k] := v
        }
    }

    @override
    function format(fmt:String):String {
        return symbols.format(fmt)
    }
}