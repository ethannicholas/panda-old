package org.pandalanguage.pandac.compiler

uses org.pandalanguage.pandac.stubs.ClassStub
uses org.pandalanguage.pandac.stubs.MethodStub
uses org.pandalanguage.pandac.stubs.Package
uses org.pandalanguage.pandac.tree.ClassNode
uses org.pandalanguage.pandac.types.Type

class Program {
    def root:Package

    def stubs := new HashMap<String, ClassStub>()

    def classes := new HashMap<String, ClassNode>()

    def typeResolver:TypeResolver

    constructor(root:Package, classes:CollectionView<ClassNode>, 
            typeResolver:TypeResolver) {
        self.root := root
        loadClassStubs(root)
        for cl in classes
            self.classes[cl.stub.name] := cl
        self.typeResolver := typeResolver
    }

    @private
    method loadClassStubs(p:Package) {
        for s in p {
            if s-?>(Package)
                loadClassStubs(s->(Package))
            else {
                def cl := s->(ClassStub)
                stubs[cl.name] := cl
            }
        }
    }

    @override
    function format(fmt:String):String {
        return classes.values->>(String)
    }

    function isEffectivelyVirtual(m:MethodStub):Bit {
        if !m.isDeclaredVirtual
            return false
        def stub := stubs[m.owner.name]
        if stub != null & stub.annotations.isFinal
            return false
        return true
    }
}