package org.pandalanguage.pandac.ast

uses org.pandalanguage.pandac.tree.Position

class ASTFor : ASTAbstractLoop {
    def valueVars:ImmutableArray<ASTTypedIdentifier>
    def list:ASTExpression
    def statement:ASTStatement

    constructor(position:Position, label:String?,
            valueVars:ListView<ASTTypedIdentifier>, list:ASTExpression,
            statement:ASTStatement) {
        super.constructor(position, label)
        self.valueVars := new ImmutableArray<ASTTypedIdentifier>(valueVars)
        self.list      := list
        self.statement := statement
    }

    @override
    function ->>():String {
        def result := new MutableString("for ")
        if valueVars.length > 1
            result.append("(")
        result.append(valueVars.join(", "))
        if valueVars.length > 1
            result.append(")")
        result.append(" in " + list)
        return result->>String
    }

    @override
    method write(out:IndentedOutputStream) {
        out.write("for ")
        if valueVars.length > 1
            out.write("(")
        out.write(valueVars.join(", "))
        if valueVars.length > 1
            out.write(")")
        out.write(" in " + list)
        if statement-?>ASTBlock {
            out.write(" ")
            statement.write(out)
        }
        else {
            out.writeLine()
            out.level += 1
            statement.write(out)
            out.level -= 1
        }
    }    
}