package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.compiler.CompilerException
uses org.pandalanguage.pandac.types.ClassType
uses org.pandalanguage.pandac.types.PrimitiveType
uses org.pandalanguage.pandac.types.Type

================================================================================
Represents the name of a class occurring in the source code.
================================================================================
class ClassLiteral : Value {
    var value:ClassType
    
    constructor(value:Type) {
        constructor(Position.INTERNAL, value)
    }
    
    constructor(position:Position, var value:Type) {
        super.constructor(position, ClassType.CLASS())
        if value.isPrimitive
            value := value->(PrimitiveType).wrapperVersion()
        self.value := value->(ClassType)
    }

    @override
    function implicitCastCost(t:Type):Int {
        throw new CompilerException("class name '" + self + "' is not valid " +
                " in this location, did you mean 'class(" + self + ")'?",
                position)
    }

    @override
    function findConverterTo(t:Type):MethodNode {
        def fail := implicitCastCost(t)
        unreachable
    }

    @override
    function variableType(preferImmutable:Bit):Type {
        def fail := implicitCastCost(type)
        unreachable
    }

    @override
    function format(fmt:String):String {
        return value.name
    }
}