package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.stubs.TypedMethodStub

================================================================================
Represents a method call.
================================================================================
class MethodCall : Node {
    ============================================================================
    The method being called.
    ============================================================================
    def methodStub:TypedMethodStub
    
    ============================================================================
    True if the method was called on 'super'.
    ============================================================================
    def isSuper:Bit

    ============================================================================
    Creates a new `MethodCall`.

    @param position the call's position
    @param methodNode the method being called
    @param isSuper `true` if this is a call to a superclass method
    @param params the parameters to the method (including 'self', if applicable)
    ============================================================================
    @pre(parameters.length = methodStub.parameters.length)
    constructor(position:Position, methodStub:TypedMethodStub, isSuper:Bit, 
            parameters:ListView<Value>) {
        super.constructor(position, remap(parameters))
        self.methodStub := methodStub
        self.isSuper := isSuper
    }

    -- FIXME covariance should take care of this when it's in
    @private
    @class
    function remap(children:ListView<Value>):ListView<Node> {
        def result := new Array<Node>()
        for c in children
            result.add(c)
        return result
    }

    function parameters():Array<Value> {
        var result := new Array<Value>()
        for child in self
            result.add(child->(Value))
        return result
    }
}