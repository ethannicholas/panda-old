package org.pandalanguage.pandac.tree

================================================================================
Representation of a for-each loop. Note that `ForEach` never survives into the
final version of the AST; it is replaced by a LoopWithContinueBlock.
================================================================================
class ForEach : AbstractLoop {
    @readonly
    var indexVariable:Variable?

    @readonly
    var loopVariable:Variable
    
    constructor(position:Position, label:String?, indexVariable:Variable?,
            loopVariable:Variable, list:Value) {
        super.constructor(position, label)
        self.label := label
        self.indexVariable := indexVariable
        self.loopVariable := loopVariable
        add(list)
    }
    
    function list():Value {
        return self[0]->(Value)
    }
    
    @override
    function block():Block {
        return self[1]->(Block)
    }
    
    @override
    function format(fmt:String):String {
        if length < 2
            return "<broken for-each>"
        def result := new MutableString("for ")
        if indexVariable != null
            result.append("\{indexVariable.name}:\{indexVariable.type.displayName}, ")
        result.append("\{loopVariable.name}:\{loopVariable.type.displayName} ")
        result.append("in \{list} \{block}")
        return result->>(String)
    }
}