package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.compiler.Context
uses org.pandalanguage.pandac.tree.FieldNode
uses org.pandalanguage.pandac.types.Type

================================================================================
Represents a reference to a property.
================================================================================
class PropertyGet : UnresolvedValue {
    ============================================================================
    The object in which the property is found.
    ============================================================================
    def object:Value

    ============================================================================
    The field being referenced.
    ============================================================================
    def field:FieldNode

    @pre(!object.type.isPrimitive)
    init(context:Context, position:Position, object:Value, field:FieldNode) {
        super.init(position, "missing getter for \{field.name}", 
                context.call(position, object,
                    String.format(IRGenerator.GET_PATTERN, field.name), [], 
                field.type, false))
        assert field.kind = Variable.Kind.PROPERTY
        self.object := object
        self.field := field
    }

    @override
    method reportError(context:Context) {
        context.errors.error("class '\{field.owner.name}' does not implement " +
                "a '\{String.format(IRGenerator.GET_PATTERN, field.name)}' " +
                "method to serve as a getter for property '\{field.name}'",
                position)
    }

    @override
    function convert():String {
        if object.convert() = "self" {
            return field.name
        }
        return object + "." + field.name
    }
}