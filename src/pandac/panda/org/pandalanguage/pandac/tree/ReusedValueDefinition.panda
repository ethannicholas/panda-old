package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.Type

================================================================================
Defines a computation which is reused in multiple places. This is akin to
defining an SSA temp variable; in the LLVM backend it compiles to exactly that.

After creating a `ReusedValueDefinition`, you must use `createReference()` to
create references to the value which can be used in other AST constructs (as the
original value already has a parent and thus may not be re-inserted elsewhere in
the tree).
================================================================================
class ReusedValueDefinition : Value {
    constructor(value:Value) {
        super.constructor(value.position, value.type)
        add(value)
    }

    function value():Value {
        return self[0]->(Value)
    }

    ============================================================================
    Returns a reference to the reused value.
    ============================================================================
    method createReference():Value {
        return new ReusedValue(self)
    }

    @override
    function format(fmt:String):String {
        return value->>(String)
    }
}

class ReusedValue : Value {
    @readonly
    def owner:ReusedValueDefinition

    constructor(owner:ReusedValueDefinition) {
        super.constructor(owner.value.position, owner.value.type)
        self.owner := owner
    }

    function value():Value {
        return owner.value
    }

    @override
    function format(fmt:String):String {
        return value->>(String)
    }
}