package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.Type

================================================================================
Defines a computation which is reused in multiple places. This is akin to
defining an SSA temp variable; in the LLVM backend it compiles to exactly that.

After creating a `ReusedValueDefinition`, you must use `createReference()` to
create references to the value which can be used in other IR constructs.
================================================================================
class ReusedValueDefinition : Value {
    def value:Value

    @pre(value-!>ClassLiteral)
    init(value:Value) {
        super.init(value.position, value.type)
        self.value := value
    }

    ============================================================================
    Returns a reference to the reused value.
    ============================================================================
    method createReference():Value {
        return ReusedValue(self)
    }

    @override
    function convert():String {
        return "-*REUSED:\{type}*-(" + value->>String + ")"
    }
}

class ReusedValue : Value {
    def owner:ReusedValueDefinition

    init(owner:ReusedValueDefinition) {
        super.init(owner.value.position, owner.value.type)
        self.owner := owner
    }

    function value():Value {
        return owner.value
    }

    @override
    function convert():String {
        return value->>String
    }
}