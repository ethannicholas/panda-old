package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.compiler.Context
uses org.pandalanguage.pandac.types.RealLiteralType
uses org.pandalanguage.pandac.types.RealType
uses org.pandalanguage.pandac.types.Type

class RealLiteral : Value {
    constant REAL32_COST := 2

    def value:Real64
    
    init(position:Position, value:Real64) {
        init(position, value, RealLiteralType.REAL_LITERAL)
    }
    
    @pre(type.isReal)
    init(position:Position, value:Real64, type:Type) {
        super.init(position, type)
        self.value := value
    }

    @override
    function implicitCastCost(context:Context, t:Type):Int? {
        var r32 := RealType.REAL32.implicitCastCost(context, t)
        if r32 != null
            r32 += REAL32_COST
        def r64 := RealType.REAL64.implicitCastCost(context, t)
        if r32 = null
            return r64
        if r64 = null
            return r32
        return r32.min(r64)
    }

    @override
    method implicitCast(position:Position, context:Context, t:Type):Value {
        switch t {
            case RealType.REAL32, RealType.REAL64:
                return RealLiteral(position, value, t)
            default: return super.implicitCast(position, context, t)
        }    
    }

    @override
    function convert():String {
        return value.convert()
    }
}