package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.compiler.Context

================================================================================
Represents an implicit instance context. For instance, when compiling:

	function foo() {
		bar()
	}

the `bar()` invocation does not have an explicit "target" (object or class on 
which) it is being called. Is it an instance method? A class method? A field of
method type? We have no idea at this point. So we create an `InstanceContext` to
serve as the call's target, which will later be replaced with either a 
`ClassLiteral` or reference to the `self` parameter.
================================================================================
class InstanceContext : UnresolvedValue {
	property selfParam:Value
	property classLiteral:Value

	init(position:Position, selfParam:Value) {
		super.init(position, "instance context", selfParam)
	}

	@override
	method reportError(context:Context) {
		unreachable
	}

	@private
	function get_selfParam():Value {
		return value
	}

	@private
	function get_classLiteral():Value {
		return ClassLiteral(position, selfParam.type)
	}
}