package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.Type

@abstract
class Value : Node {
    var type:Type
    
    constructor(type:Type) {
        self.type := type
    }

    constructor(position:Position, type:Type) {
        super.constructor(position)
        self.type := type
    }

    @static
    method canImplicitCastTo(t:Type):Bit {
        return implicitCastCost(t) != Type.NO_MATCH
    }

    method implicitCastCost(t:Type):Int {
        return type.implicitCastCost(t)
    }

    method canExplicitCastTo(t:Type):Bit {
        return type.canExplicitCastTo(t)
    }

    method findConverterTo(t:Type):MethodNode? {
        return type.findConverterTo(t)
    }

    @static
    method canConvertTo(t:Type):Bit {
        return findConverterTo(t) != null
    }

    @static
    method variableType():Type {
        return variableType(false)
    }

    ============================================================================
    If a variable or field is initialized with this value, returns the actual 
    type that the variable or field should be set to.
    ============================================================================
    method variableType(preferImmutable:Bit):Type {
        return type.variableType()
    }

    @override
    method markLive() {
        if !live {
            super.markLive()
            for child in children
                child.markLive()
        }
    }
}