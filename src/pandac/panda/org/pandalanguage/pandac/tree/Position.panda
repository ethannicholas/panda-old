package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.parser.PandaParser

class Position : panda.core.Value {
    constant INTERNAL := new Position(new File("<internal>"), -1)

    def file:File

    def offset:Int
    
    constructor(file:File, offset:Int) {
        self.file := file
        self.offset := offset
    }

    @override
    function format(fmt:String):String {
        return file.name + ":(offset \{offset})"
    }
    
    function format(parser:PandaParser):String {
        def text := parser.fileText[file]
        if text != null {
            def stream := new LineNumberInputStream(new MemoryInputStream(text))
            for i in 0 .. offset
                stream.readInt8()
            return file.name + ":" + stream.line + ":" + stream.column
        }
        else
            return file.name + ":(internal error)"
    }

    @override
    function =(o:Object):Bit {
        if o-?>(Position) {
            def p := o->(Position)
            return file = p.file & offset = p.offset
        }
        return false
    }

    @override
    @math(overflow)
    function hash():Int {
        return file.hash ~~ offset
    }
}