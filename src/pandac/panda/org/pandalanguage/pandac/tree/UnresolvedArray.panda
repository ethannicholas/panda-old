package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.compiler.Context
uses org.pandalanguage.pandac.types.ClassType
uses org.pandalanguage.pandac.types.NullableType
uses org.pandalanguage.pandac.types.PrimitiveArrayType
uses org.pandalanguage.pandac.types.StringOrCharType
uses org.pandalanguage.pandac.types.Type
uses org.pandalanguage.pandac.types.UnresolvedType

================================================================================
Represents an array created with the array literal syntax, e.g. `[1, 2, 3]`.
`UnresolvedArray` is turned into a concrete array value once its type is 
determined.
================================================================================
class UnresolvedArray : UnresolvedValue {
    def values:List<Value>

    constructor(context:Context, position:Position, values:ListView<Value>) {
        super.constructor(position, "<array>", getValue(context, position,
        		values))
        self.values := new Array<Value>(values)
    }

    @class
    method getValue(context:Context, position:Position, 
    		values:ListView<Value>):Value {
        var type:Type
        if values.length = 0
        	type := NullableType.ANY
        else {
        	type := values[0].type
        	for i in 1 .. values.length
        		type := Type.union(context, type, values[i].type)
        }
        return new ArrayLiteral(position, type, values)
    }

    @override
    method reportError(context:Context) {
    	unreachable
    }
}