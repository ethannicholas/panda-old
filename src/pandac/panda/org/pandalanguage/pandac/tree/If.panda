package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.BitType

class If : Statement {
    @pre(test.type = BitType.BIT)
    constructor(position:Position, test:Value, ifBlock:Block, 
            elseBlock:Block?) {
        super.constructor(position, wrap(test, ifBlock, elseBlock))
    }
    
    @private
    @class
    function wrap(test:Value, ifBlock:Block, elseBlock:Block?):ListView<Node> {
        def result := new Array<Node>()
        result.add(test)
        result.add(ifBlock)
        if elseBlock != null
            result.add(elseBlock)
        return result
    }

    function test():Value {
        return self[0]->(Value)
    }
    
    function ifBlock():Block {
        return self[1]->(Block)
    }

    function elseBlock():Block? {
        if self.length > 2
            return self[2]->(Block)
        else
            return null
    }
    
    @override
    function format(fmt:String):String {
        var eb := elseBlock
        if eb != null
            return "if " + test + " " + ifBlock + " else " + eb
        else
            return "if " + test + " " + ifBlock
    }
}