package org.pandalanguage.pandac.tree

class Block : Statement {
    constructor(position:Position, children:ListView<Statement>) {
        super.constructor(position, remap(children))
    }

    -- FIXME covariance should take care of this when it's in
    @private
    @class
    function remap(children:ListView<Statement>):ListView<Node> {
        def result := new Array<Node>()
        for c in children
            result.add(c)
        return result
    }

    function statements():ListView<Statement> {
        def result := new Array<Statement>()
        for child in self
            result.add(child->(Statement))
        return result
    }

    -- this method was originally written for LLVMCodeGenerator to know whether
    -- a branch was necessary at the end of a block. Throw is not considered a
    -- branch for that reason, because it's a function call rather than an 
    -- LLVM-level branch. This eventually led to the creation of 
    -- endsInBranchOrThrow, which is just gross. Should probably move this 
    -- LLVM-specific test into LLVMCodeGenerator and rename endsInBranchOrThrow 
    -- to endsInBranch.
    function endsInBranch():Bit {
        if length = 0
            return false
        var last := self[self.length - 1]
        return last-?>(Return) | last-?>(Continue) | last-?>(Break) |
                (last-?>(Block) & last->(Block).endsInBranch)
    }

    function endsInBranchOrThrow():Bit {
        if length = 0
            return false
        var last := self[self.length - 1]
        return last-?>(Return) | last-?>(Continue) | last-?>(Break) | 
                last-?>(Throw) | last-?>(Unreachable) |
                (last-?>(Block) & last->(Block).endsInBranchOrThrow)
    }

    @override
    function format(fmt:String):String {
        return "{ " + join("\n") + " }"
    }
}