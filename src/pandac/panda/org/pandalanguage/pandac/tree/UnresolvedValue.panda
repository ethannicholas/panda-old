package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.PrimitiveArrayType
uses org.pandalanguage.pandac.types.ClassType
uses org.pandalanguage.pandac.types.StringOrCharType
uses org.pandalanguage.pandac.types.Type
uses org.pandalanguage.pandac.types.UnresolvedType

================================================================================
Represents a value which has not yet been converted to a concrete object. For
instance, when parsing `[1, 2]`, this could be an array of Ints, or Reals, or
Objects, or various other things depending on context. This is complicated by
the fact that we need to have some type information about the array in order to
determine the context in the first place: for instance, what if we call 
`process([1, 2])` and there are multiple overloads of `process`? We have enough
information to determine already that, say, `process(Array<String>)` isn't a
valid match despite not yet knowing whether we are dealing with an `Array<Int>`
or `Array<Object>` or whatnot. We use the available type information (in the 
form of an `UnresolvedArray`) to match the method, and then once the context is 
determined we resolve the `UnresolvedArray` into its final form.
================================================================================
class UnresolvedValue : Value {
    constructor(position:Position, type:Type) {
        super.constructor(position, type)
    }
    
    constructor(position:Position, type:Type, child:Node) {
        super.constructor(position, type, child)
    }

    constructor(position:Position, type:Type, children:ListView<Node>) {
        super.constructor(position, type, children)
    }
    
    @override
    function isResolved():Bit {
        return false
    }
}