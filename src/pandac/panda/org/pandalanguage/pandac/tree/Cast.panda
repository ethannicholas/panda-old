package org.pandalanguage.pandac.tree

uses org.pandalanguage.pandac.types.Type

choice CastType {
    IMPLICIT,
    EXPLICIT,
    CONVERT
}

class Cast : Value {
    def castType:CastType

    def value:Value

    ============================================================================
    If true, the cast does not need to be checked at runtime.
    ============================================================================
    var safe := false
    
    @pre(value.type.isPrimitive = type.isPrimitive)
    @pre(value.type != type)
    init(position:Position, value:Value, type:Type, castType:CastType) {
        super.init(position, type)
        if value.type.unwrapNullable = org.pandalanguage.pandac.types.ClassType.STRING & type.unwrapNullable = org.pandalanguage.pandac.types.WrapperType.INT32_WRAPPER
            throw org.pandalanguage.pandac.compiler.InternalCompilerException("invalid cast")
        self.value := value
        self.castType := castType
    }

    @override
    function convert():String {
        return "(\{value}->\{type.displayName})"
    }
}