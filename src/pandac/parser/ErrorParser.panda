uses panda.parser.*

    package org.pandalanguage.pandac.parser

    class ErrorDescription {
        def errorState:String
        def errorText:String

        init(errorState:String, errorText:String) {
            self.errorState := errorState
            self.errorText := errorText
        }

        @override
        function convert():String {
            return "<\{errorState}, \{errorText}>"
        }
    }

class ErrorParser : Immutable (GLRParser.Reducer) {
    -- I would love to just be able to include the parse tables as inline
    -- array literals, but Java complains about too much code in the init
    -- method when I do so
    constant _productionIds := createProductionIds()
    @class
    function createProductionIds():ImmutableArray<Int> {
        return [0, 0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 8, 9, 9]
    }
    constant _actions := createActions()
    @class
    function createActions():ImmutableArray<ImmutableArray<GLRParser.Action?>> {
        return [
               createActions0(),
               createActions1(),
               createActions2(),
               createActions3(),
               createActions4(),
               createActions5(),
               createActions6(),
               createActions7(),
               createActions8(),
               createActions9(),
               createActions10(),
               createActions11(),
               createActions12(),
               createActions13(),
               createActions14(),
               createActions15(),
               createActions16(),
               createActions17(),
               createActions18(),
               createActions19(),
               createActions20(),
               createActions21(),
               createActions22(),
               createActions23(),
               createActions24()
           ]
    }
    @class
    function createActions0():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 1)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 1)
        def action2 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 18)
        return [null, null, null, action0, null, null, null, null, null, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action2, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1]
    }
    @class
    function createActions1():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 7)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions2():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 3)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions3():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 0)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 1)
        def action2 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 18)
        return [null, null, null, action0, null, null, null, null, null, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action2, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1]
    }
    @class
    function createActions4():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 2)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions5():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 6)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions6():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 1)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 8)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions7():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 5)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions8():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 9)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 10)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions9():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 8)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions10():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 11)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 12)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions11():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 9)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions12():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 13)
        return [null, null, null, null, null, null, null, null, null, action0, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions13():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 14)
        return [null, null, null, null, null, null, null, null, null, action0, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions14():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 12)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions15():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 11)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions16():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 4)
        def action1 := panda.parser.GLRParser.Action([panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 4), panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 14)])
        return [null, null, null, action0, null, null, null, null, null, action1, action0, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1]
    }
    @class
    function createActions17():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.REDUCE, 10)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions18():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 9)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 19)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions19():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 11)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions20():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 21)
        return [null, null, null, action0]
    }
    @class
    function createActions21():ImmutableArray<GLRParser.Action?> {
        return []
    }
    @class
    function createActions22():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 1)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 18)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions23():ImmutableArray<GLRParser.Action?> {
        def action0 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 24)
        def action1 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 1)
        def action2 := panda.parser.GLRParser.Action(panda.parser.GLRParser.Action.Type.SHIFT, 18)
        return [null, null, null, action0, null, null, null, null, null, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action2, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1]
    }
    @class
    function createActions24():ImmutableArray<GLRParser.Action?> {
        return []
    }
    constant _gotos := createGotos()
    @class
    function createGotos():ImmutableArray<ImmutableArray<Int?>> {
        return [
               createGotos0(),
               createGotos1(),
               createGotos2(),
               createGotos3(),
               createGotos4(),
               createGotos5(),
               createGotos6(),
               createGotos7(),
               createGotos8(),
               createGotos9(),
               createGotos10(),
               createGotos11(),
               createGotos12(),
               createGotos13(),
               createGotos14(),
               createGotos15(),
               createGotos16(),
               createGotos17(),
               createGotos18(),
               createGotos19(),
               createGotos20(),
               createGotos21(),
               createGotos22(),
               createGotos23(),
               createGotos24()
           ]
    }
    @class
    function createGotos0():ImmutableArray<Int?> {
        return [20, 3, 2, 6, 5]
    }
    @class
    function createGotos1():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos2():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos3():ImmutableArray<Int?> {
        return [null, null, 4, 6, 5]
    }
    @class
    function createGotos4():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos5():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos6():ImmutableArray<Int?> {
        return [null, null, null, null, 7, null, null, 13]
    }
    @class
    function createGotos7():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos8():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos9():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos10():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos11():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos12():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos13():ImmutableArray<Int?> {
        return [null, null, null, null, null, 16, 15]
    }
    @class
    function createGotos14():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos15():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos16():ImmutableArray<Int?> {
        return [null, null, null, null, null, null, 17]
    }
    @class
    function createGotos17():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos18():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos19():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos20():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos21():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos22():ImmutableArray<Int?> {
        return [null, 23, 2, 6, 5]
    }
    @class
    function createGotos23():ImmutableArray<Int?> {
        return [null, null, 4, 6, 5]
    }
    @class
    function createGotos24():ImmutableArray<Int?> {
        return []
    }
    @class
    method reduce0(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
def errors:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
{ result := errors }
return result
    }
    @class
    method reduce1(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
{ result := [] }
return result
    }
    @class
    method reduce2(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
def error:ErrorDescription := parserState.state.output->ErrorDescription
parserState.state := parserState.state.next
def errors:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
{ 
        result := errors
        result.add(error)
    }
return result
    }
    @class
    method reduce3(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
def error:ErrorDescription := parserState.state.output->ErrorDescription
parserState.state := parserState.state.next
{ result := [error] }
return result
    }
    @class
    method reduce4(parserState:GLRParser.State):Object {
def result:ErrorDescription
def errorText:String := parserState.state.output->String
parserState.state := parserState.state.next
parserState.state := parserState.state.next
def errorState:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := ErrorDescription(errorState.trim(), errorText.trim()) }
return result
    }
    @class
    method reduce5(parserState:GLRParser.State):Object {
def result:String
def errorStateChar:String := parserState.state.output->String
parserState.state := parserState.state.next
def errorState:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := errorState + errorStateChar }
return result
    }
    @class
    method reduce6(parserState:GLRParser.State):Object {
def result:String
def errorStateChar:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := errorStateChar }
return result
    }
    @class
    method reduce7(parserState:GLRParser.State):Object {
def result:String
def char:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := char }
return result
    }
    @class
    method reduce8(parserState:GLRParser.State):Object {
def result:String
def char:String := parserState.state.output->String
parserState.state := parserState.state.next
parserState.state := parserState.state.next
{ result := ':' + char }
return result
    }
    @class
    method reduce9(parserState:GLRParser.State):Object {
def result:String
def char:String := parserState.state.output->String
parserState.state := parserState.state.next
parserState.state := parserState.state.next
parserState.state := parserState.state.next
{ result := '::' + char }
return result
    }
    @class
    method reduce10(parserState:GLRParser.State):Object {
def result:String
def errorTextChar:String := parserState.state.output->String
parserState.state := parserState.state.next
def errorText:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := errorText + errorTextChar }
return result
    }
    @class
    method reduce11(parserState:GLRParser.State):Object {
def result:String
def errorTextChar:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := errorTextChar }
return result
    }
    @class
    method reduce12(parserState:GLRParser.State):Object {
def result:String
def char:String := parserState.state.output->String
parserState.state := parserState.state.next
{ result := char }
return result
    }
    @class
    method reduce13(parserState:GLRParser.State):Object {
for i in 0 .. 3 parserState.state := parserState.state.next
return '<no output>'
    }
    @class
    method reduce14(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
parserState.state := parserState.state.next
def file:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
result := file
return result
    }
    @class
    method reduce15(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
parserState.state := parserState.state.next
def file:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
result := file
return result
    }
    @class
    method reduce16(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
parserState.state := parserState.state.next
def errors:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
result := errors
return result
    }
    @class
    method reduce17(parserState:GLRParser.State):Object {
def result:Array<ErrorDescription>
parserState.state := parserState.state.next
def errors:Array<ErrorDescription> := parserState.state.output->Array<ErrorDescription>
parserState.state := parserState.state.next
result := errors
return result
    }
    constant REDUCTIONS := [
        reduce0,
        reduce1,
        reduce2,
        reduce3,
        reduce4,
        reduce5,
        reduce6,
        reduce7,
        reduce8,
        reduce9,
        reduce10,
        reduce11,
        reduce12,
        reduce13,
        reduce14,
        reduce15,
        reduce16,
        reduce17
    ]
    method reduce(production:Int, parserState:GLRParser.State):Object? {
        return REDUCTIONS[production](parserState)
    }
function file(text:String, reference:Object?):(Array<ErrorDescription>?, ListView<GLRParser.ParseError>) {
    def parser := GLRParser(_productionIds, _actions, _gotos, _errors, self)
    def result, errors := parser.parse(text, 0, reference)
	   return (result->Array<ErrorDescription>?, errors)
}
function errors(text:String, reference:Object?):(Array<ErrorDescription>?, ListView<GLRParser.ParseError>) {
    def parser := GLRParser(_productionIds, _actions, _gotos, _errors, self)
    def result, errors := parser.parse(text, 22, reference)
	   return (result->Array<ErrorDescription>?, errors)
}
    constant _errors := createErrors()
    @class
    function createErrors():ImmutableArray<String?> {
        return []
    }
}
