{
    package org.pandalanguage.pandac.parser

    class ErrorDescription {
        def errorState:String
        def errorText:String

        init(errorState:String, errorText:String) {
            self.errorState := errorState
            self.errorText := errorText
        }

        @override
        function convert():String {
            return "<\{errorState}, \{errorText}>"
        }
    }
}

{ }

@file:Array<ErrorDescription> = errors
    { result := errors }
@file:Array<ErrorDescription> =
    { result := [] }
@errors:Array<ErrorDescription> = errors error
    { 
        result := errors
        result.add(error)
    }
@errors:Array<ErrorDescription> = error
    { result := [error] }
error:ErrorDescription = errorState DELIMITER errorText
    { result := ErrorDescription(errorState.trim(), errorText.trim()) }
errorState:String = errorState errorStateChar
    { result := errorState + errorStateChar }
errorState:String = errorStateChar
    { result := errorStateChar }
errorStateChar:String = char:[^:]
    { result := char }
errorStateChar:String = ':' char:[^:]
    { result := ':' + char }
errorStateChar:String = ':' ':' char:[^:]
    { result := '::' + char }
errorText:String = errorText errorTextChar
    { result := errorText + errorTextChar }
errorText:String = errorTextChar
    { result := errorTextChar }
errorTextChar:String = char:[^\n]
    { result := char }
DELIMITER = ':::'
