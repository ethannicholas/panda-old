
    class Util {
        @class
        method main(args:PrimitiveArray<String>) {
            def text := new File(args[0]).readAsString()
            def parser := Test.createParser(text)
            def result := parser.parse()
            Console.writeLine(Parser.getPosition(result[0], text) + ": " + result[1])
        }
    }

class PandaParser : Immutable (Reducer) {
    -- I would love to just be able to include the parse tables as inline
    -- array literals, but Java complains about too much code in the init
    -- method when I do so
    constant productionIds := createProductionIds()
    @class
    function createProductionIds():ImmutableArray<Int> {
        return [0, 1, 2, 3, 4, 5, 6, 7, 3, 7, 5, 8, 3, 0, 9, 6, 10, 10, 11]
    }
    constant actions := createActions()
    @class
    function createActions():ImmutableArray<ImmutableArray<Action?>> {
        return [
               createActions0(),
               createActions1(),
               createActions2(),
               createActions3(),
               createActions4(),
               createActions5(),
               createActions6(),
               createActions7(),
               createActions8(),
               createActions9(),
               createActions10(),
               createActions11(),
               createActions12(),
               createActions13(),
               createActions14(),
               createActions15(),
               createActions16(),
               createActions17(),
               createActions18(),
               createActions19(),
               createActions20(),
               createActions21(),
               createActions22(),
               createActions23(),
               createActions24(),
               createActions25(),
               createActions26(),
               createActions27(),
               createActions28(),
               createActions29(),
               createActions30(),
               createActions31()
           ]
    }
    @class
    function createActions0():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 1)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions1():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 2)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions2():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 3)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions3():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 4)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions4():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 5)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions5():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 6)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions6():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 7)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions7():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 10)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions8():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 2)
        def action1 := new Action(ActionType.SHIFT, 9)
        def action2 := new Action(ActionType.SHIFT, 14)
        return [null, null, null, action0, null, null, null, null, null, action1, action1, null, null, action1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action1, null, null, null, null, null, null, null, null, null, null, null, null, action2]
    }
    @class
    function createActions9():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 0)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions10():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 13)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions11():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 9)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions12():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 7)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions13():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 5)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions14():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 15)
        def action1 := new Action(ActionType.SHIFT, 24)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0, null, null, action1]
    }
    @class
    function createActions15():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 15)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions16():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 17)
        def action1 := new Action(ActionType.SHIFT, 18)
        def action2 := new Action([new Action(ActionType.SHIFT, 17), new Action(ActionType.SHIFT, 23)])
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action2, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions17():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 8)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions18():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 19)
        def action1 := new Action(ActionType.SHIFT, 20)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action1, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions19():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 3)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions20():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 14)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions21():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 12)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions22():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 6)
        return [null, null, null, null, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions23():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 15)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions24():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 16)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions25():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 4)
        def action1 := new Action([new Action(ActionType.REDUCE, 4), new Action(ActionType.SHIFT, 26)])
        return [null, null, null, action0, null, null, null, null, null, action1, action0, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1, action1]
    }
    @class
    function createActions26():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 17)
        return [null, null, null, action0, null, null, null, null, null, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0, action0]
    }
    @class
    function createActions27():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 11)
        return [null, null, null, action0]
    }
    @class
    function createActions28():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.REDUCE, 1)
        return [null, null, null, action0]
    }
    @class
    function createActions29():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 1)
        return [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, action0]
    }
    @class
    function createActions30():ImmutableArray<Action?> {
        def action0 := new Action(ActionType.SHIFT, 31)
        return [null, null, null, action0]
    }
    @class
    function createActions31():ImmutableArray<Action?> {
        return []
    }
    constant gotos := createGotos()
    @class
    function createGotos():ImmutableArray<ImmutableArray<Int?>> {
        return [
               createGotos0(),
               createGotos1(),
               createGotos2(),
               createGotos3(),
               createGotos4(),
               createGotos5(),
               createGotos6(),
               createGotos7(),
               createGotos8(),
               createGotos9(),
               createGotos10(),
               createGotos11(),
               createGotos12(),
               createGotos13(),
               createGotos14(),
               createGotos15(),
               createGotos16(),
               createGotos17(),
               createGotos18(),
               createGotos19(),
               createGotos20(),
               createGotos21(),
               createGotos22(),
               createGotos23(),
               createGotos24(),
               createGotos25(),
               createGotos26(),
               createGotos27(),
               createGotos28(),
               createGotos29(),
               createGotos30(),
               createGotos31()
           ]
    }
    @class
    function createGotos0():ImmutableArray<Int?> {
        return [null, null, 27, null, null, null, null, null, 28]
    }
    @class
    function createGotos1():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos2():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos3():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos4():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos5():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos6():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos7():ImmutableArray<Int?> {
        return [null, null, null, null, null, 8]
    }
    @class
    function createGotos8():ImmutableArray<Int?> {
        return [13, null, null, null, 12, null, null, 10, null, 11]
    }
    @class
    function createGotos9():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos10():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos11():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos12():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos13():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos14():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos15():ImmutableArray<Int?> {
        return [null, null, null, null, null, null, 16]
    }
    @class
    function createGotos16():ImmutableArray<Int?> {
        return [null, null, null, 22, null, null, null, null, null, 21]
    }
    @class
    function createGotos17():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos18():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos19():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos20():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos21():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos22():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos23():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos24():ImmutableArray<Int?> {
        return [null, null, null, null, null, null, null, null, null, null, 25]
    }
    @class
    function createGotos25():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos26():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos27():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos28():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos29():ImmutableArray<Int?> {
        return [null, 30, 27, null, null, null, null, null, 28]
    }
    @class
    function createGotos30():ImmutableArray<Int?> {
        return []
    }
    @class
    function createGotos31():ImmutableArray<Int?> {
        return []
    }
    method reduce(production:Int, parserState:ParserState):Object {
    	   switch production {
            case 0: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 1: {
def result:String
def file:String := parserState.state.output->(String)
parserState.state := parserState.state.next
{ return "Success!" }
return result
}
            case 2: {
for i in 0 .. 8 parserState.state := parserState.state.next
return '<no output>'
}
            case 3: {
for i in 0 .. 2 parserState.state := parserState.state.next
return '<no output>'
}
            case 4: {
for i in 0 .. 3 parserState.state := parserState.state.next
return '<no output>'
}
            case 5: {
for i in 0 .. 2 parserState.state := parserState.state.next
return '<no output>'
}
            case 6: {
for i in 0 .. 2 parserState.state := parserState.state.next
return '<no output>'
}
            case 7: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 8: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 9: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 10: {
for i in 0 .. 0 parserState.state := parserState.state.next
return '<no output>'
}
            case 11: {
def result:String
parserState.state := parserState.state.next
{ return "Success!" }
return result
}
            case 12: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 13: {
for i in 0 .. 1 parserState.state := parserState.state.next
return '<no output>'
}
            case 14: {
for i in 0 .. 5 parserState.state := parserState.state.next
return '<no output>'
}
            case 15: {
for i in 0 .. 0 parserState.state := parserState.state.next
return '<no output>'
}
            case 16: {
for i in 0 .. 0 parserState.state := parserState.state.next
return '<no output>'
}
            case 17: {
for i in 0 .. 2 parserState.state := parserState.state.next
return '<no output>'
}
            case 18: {
def result:Object
parserState.state := parserState.state.next
def start:String := parserState.state.output->(String)
parserState.state := parserState.state.next
result := start
return result
}
        }
    }
    @class
    method createParser(text:String):Parser {
        return new Parser(productionIds, actions, gotos, new PandaParser(), text)
    }
}
