NUMBER       := /[0-9]+|(([0-9]*(\.[0-9]+)|[0-9]+(\.[0-9]+)?)([eE][+-]?[0-9]+)?)|0b[01]+|0x[0-9A-Fa-f]+/
STRING       := /('(\\.|[^'\\\n])*')|("(\\.|[^"\\\n])*")/
UNTERMINATED_STRING := /('(\\.|[^'\\\n])*\n)|("(\\.|[^"\\\n])*\n)/
LINECOMMENT    := /--[^\n]*/
BLOCKCOMMENT   := "-*"
DOCCOMMENT     := "==="
PLUGIN         := /#(\\.|[^\\#])*#/
WHITESPACE     := /\s*/
PUBLIC         := "@public"
PRIVATE        := "@private"
PROTECTED      := "@protected"
ABSTRACT       := "@abstract"
ATCLASS        := "@class"
THREAD         := "@thread"
EXTERNAL       := "@external"
STATIC         := "@static"
READONLY       := "@readonly"
MATH           := "@math"
OVERRIDE       := "@override"
LIMITED        := "@limited"
ATSELF         := "@self"
SAFERETURN     := "@safeReturn"
UNSAFEFUNCTION := "@unsafeFunction"
PRE_OR         := "@preOr"
POST           := "@post"
POST_AND       := "@postAnd"
ATRETURN       := "@return"
INVARIANT      := "@invariant"
INSTANCE       := "@$instance"
WRAPPER_METHOD := "@$wrapperMethod"
OVERFLOW       := "overflow"
PACKAGE        := "package"
USES           := "uses"
AS             := "as"
CLASS          := "class"
INTERFACE      := "interface"
ENUM           := "enum"
FUNCTION       := "function"
METHOD         := "method"
CONSTRUCTOR    := "constructor"
VAR            := "var"
DEF            := "def"
PROPERTY       := "property"
CONSTANT       := "constant"
RETURN         := "return"
BREAK          := "break"
CONTINUE       := "continue"
DO             := "do"
WHILE          := "while"
FOR            := "for"
BY             := "by"
IN             := "in"
LOOP           := "loop"
IF             := "if"
ELSE           := "else"
TRUE           := "true"
FALSE          := "false"
NULL           := "null"
NEW            := "new"
ASSERT         := "assert"
UNREACHABLE    := "unreachable"
TRY            := "try"
CATCH          := "catch"
FINALLY        := "finally"
THROW          := "throw"
SWITCH         := "switch"
CASE           := "case"
DEFAULT        := "default"
SELF           := "self"
SUPER          := "super"
PRE            := "@pre"
UNDERSCORE     := "_"
IDENTIFIER     := /[a-zA-Z_$][a-zA-Z0-9_$]*/
NOT            := "!"
BITWISENOT     := "!!"
ADD            := "+"
SUB            := "-"
MUL            := "*"
DIV            := "/"
INTDIV         := "//"
REM            := "%"
POW            := "^"
EQ             := "="
NEQ            := "!="
IDENTITY       := "=="
NIDENTITY      := "!=="
LT             := "<"
GT             := ">"
LTEQ           := "<="
GTEQ           := ">="
AND            := "&"
BITWISEAND     := "&&"
OR             := "|"
BITWISEOR      := "||"
XOR            := "~"
BITWISEXOR     := "~~"
SHIFTLEFT      := "<<"
ASSIGNMENT     := ":="
ADDEQ          := "+="
SUBEQ          := "-="
MULEQ          := "*="
DIVEQ          := "/="
REMEQ          := "%="
INTDIVEQ       := "//="
OREQ           := "|="
BITWISEOREQ    := "||="
ANDEQ          := "&="
BITWISEANDEQ   := "&&="
XOREQ          := "~="
BITWISEXOREQ   := "~~="
SHIFTLEFTEQ    := "<<="
SHIFTRIGHTEQ   := ">>="
POWEQ          := "^="
CAST           := "->"
CONVERT        := "->>"
INSTANCEOF     := "-?>"
NINSTANCEOF    := "-!>"
YIELDS         := "=>"
YIELDS_METHOD  := "=&>"
YIELDS_IMMUTABLE := "=>*"
YIELDS_METHOD_IMMUTABLE  := "=&>*"
QUESTION       := "?"
COLON          := ":"
MEMBER         := "::"
DOTDOT         := ".."
ELLIPSIS       := "..."
DOT            := "."
LBRACE         := "{"
RBRACE         := "}"
LBRACKET       := "["
RBRACKET       := "]"
LPAREN         := "("
RPAREN         := ")"
COMMA          := ","


RESERVED_FOR_POTENTIAL_FUTURE_USE := /go|to|on|at|over|annotation|operator|use|using|with|repeat|concurrent|parallel|serial|from|import|lazy|extend/
