package panda.io

================================================================================
A `FilterInputStream` which tracks the current line and column as it reads from
underlying stream.
================================================================================
class LineNumberInputStream : FilterInputStream {
    ============================================================================
    The current line number (starting at 1).
    ============================================================================
    var line := 1

    ============================================================================
    The current column number (starting at 1).
    ============================================================================
    var column := 1

    ============================================================================
    Creates a new `LineNumberInputStream`.

    @param raw the underlying stream
    ============================================================================
    init(raw:InputStream) {
        super.init(raw)
    }
-- FIXME the redundant casts after the null checks below are only there until
-- dataflow analysis is back in (without the casts, the much more expensive
-- nullable equals path is used)

    @override
    method read():UInt8? {
        var result := super.read()
        if result = null {
            return null
        }
        if result->UInt8 = "\n"->UInt8 {
            line += 1
            column := 1
        }
        else {
            column += 1
        }
        return result
    }

    @override
    method read(bytes:ListWriter<UInt8>, max:Int):Int? {
        def buffer := Array<UInt8>()
        def result := super.read(buffer, max)
        if result != null {
            for i in 0 .. result {
                if buffer[i] = "\n"->UInt8 {
                    line += 1
                    column := 1
                }
                else {
                    column += 1
                }
            }
        }
        bytes.addAll(buffer)
        return result
    }
}