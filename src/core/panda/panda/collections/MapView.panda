package panda.collections

interface MapEntry {
    function key():Object?

    function value():Object?
}

================================================================================
A read-only view of the standard "Map" abstract data type, which stores 
key/value pairs such that no key appears more than once in the collection. Given
a key, a `MapView` will return the corresponding value, and generally does so 
very quickly (the standard `HashMap` implementation can typically retrieve 
values in constant time no matter how much data it contains).
================================================================================
interface MapView {
    ============================================================================
    Returns the value corresponding to the specified key, or `null` if it was
    not present in the map.

    Note that this method cannot distinguish between a key that does not exist 
    and a key that exists but points to the value `null`; you must use the 
    [contains(Object?)] method to distinguish these cases.

    @param key the key to search for
    @returns the corresponding object, or `null`
    @see contains(Object?)
    ============================================================================
    function [](key:Object?):Object?

    ============================================================================
    Returns `true` if the `HashMap` contains an entry for the specified key.

    @param key the key to search for
    @returns `true` if the key is present in the map
    @see []
    ============================================================================
    function contains(key:Object?):Bit

    ============================================================================
    Returns a list of all keys in the map.

    @returns a list of all keys in the map
    @see values
    @see entries
    ============================================================================
    function keys():Array<Object?>

    ============================================================================
    Returns a list of all values in the map.

    @returns a list of all values in the map
    @see keys
    @see entries
    ============================================================================
    function values():Array<Object?>

    ============================================================================
    Returns a list of all entries in the map.

    @returns a list of all entries in the map
    @see keys
    @see values
    ============================================================================
    function entries():Array<(Object?, Object?)>

    ============================================================================
    Returns the number of entries in the map.

    @returns the number of entries in the map.
    ============================================================================
    function length():Int
}