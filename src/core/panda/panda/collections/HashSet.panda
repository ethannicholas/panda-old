package panda.collections

class HashSet<T> (Set<T>) {
    def contents:Map<T,T> := new GenericHashMap<T, T>()

    constructor() {
    }

    constructor(contents:CollectionView<T>) {
        throw new NotSupportedException()
    }

    @override
    function length():Int {
        return contents.length
    }

    @override
    function contains(object:T):Bit {
        return contents[object] != null
    }

    @override
    @safeReturn
    function iterator():Iterator<T> {
        throw new NotSupportedException()
    }

    @override
    @self
    method add(object:T) {
        contents[object] := object
    }

    @override
    @self
    method remove(object:T) {
        contents.remove(object)
    }

    @override
    @self
    method clear() {
        contents.clear()
    }
}