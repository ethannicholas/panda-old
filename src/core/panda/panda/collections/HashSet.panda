package panda.collections

class HashSet<T> (Set<T>) {
    @private
    def contents:Map<T, T> := new HashMap<T, T>()

    constructor() {
    }

    constructor(contents:CollectionView<T>) {
        for v in contents
            self.add(v)
    }

    @override
    function length():Int {
        return contents.length
    }

    @override
    function contains(object:T):Bit {
        return contents.contains(object)
    }

    @override
    @safeReturn
    function iterator():Iterator<T> {
        return contents.keys.iterator
    }

    @override
    @self
    method add(object:T) {
        contents[object] := object
    }

    @override
    @self
    method remove(object:T) {
        contents.remove(object)
    }

    @override
    @self
    method clear() {
        contents.clear()
    }

    @override
    function format(fmt:String):String {
        def result := new MutableString("[")
        for i, v in self {
            if i > 0
                result.append(", ")
            result.append(v)
        }
        return result + "]"
    }
}