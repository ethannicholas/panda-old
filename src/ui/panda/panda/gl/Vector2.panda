package panda.gl

class Vector2 : Value {
	def x:Real32
	def y:Real32

	init(x:Real32, y:Real32) {
		self.x := x
		self.y := y
	}

	property length:Real32

	@private
	function get_length():Real32 {
		return (x ^ 2 + y ^ 2).sqrt
	}

	function normalized():Vector2 {
		return self * 1 / length
	}

	function +(v:Vector2):Vector2 {
		return Vector2(x + v.x, y + v.y)
	}

	function -(v:Vector2):Vector2 {
		return Vector2(x - v.x, y - v.y)
	}

	function *(scale:Real32):Vector2 {
		return Vector2(x * scale, y * scale)
	}

	@class
	function *(scale:Real32, v:Vector2):Vector2 {
		return Vector2(v.x * scale, v.y * scale)
	}

	function /(scale:Real32):Vector2{
		return Vector2(x / scale, y / scale)
	}

	function dot(v:Vector2):Real32 {
		return x * v.x + y * v.y
	}

	function cross(v:Vector2):Real32 {
        return x * v.y - y * v.x
	}

	@override
	function convert():String {
		return "[\{x}, \{y}]"
	}
}