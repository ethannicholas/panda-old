package panda.gl

class Vector3 : Value {
	def x:Real32
	def y:Real32
	def z:Real32

	init(x:Real32, y:Real32, z:Real32) {
		self.x := x
		self.y := y
		self.z := z
	}

	property length:Real32

	@private
	function get_count():Real32 {
		return (x ^ 2 + y ^ 2 + z ^ 2).sqrt
	}

	function normalized():Vector3 {
		return self * 1 / length
	}

	function +(v:Vector3):Vector3 {
		return Vector3(x + v.x, y + v.y, z + v.z)
	}

	function -(v:Vector3):Vector3 {
		return Vector3(x - v.x, y - v.y, z - v.z)
	}

	function *(scale:Real32):Vector3 {
		return Vector3(x * scale, y * scale, z * scale)
	}

	@class
	function *(scale:Real32, v:Vector3):Vector3 {
		return Vector3(v.x * scale, v.y * scale, v.z * scale)
	}

	function /(scale:Real32):Vector3{
		return Vector3(x / scale, y / scale, z / scale)
	}

	function dot(v:Vector3):Real32 {
		return x * v.x + y * v.y + z * v.z
	}

	function cross(v:Vector3):Vector3 {
		return Vector3(self.y * v.z - v.y * self.z,
		   			  self.z * v.x - v.z * self.x,
					  self.x * v.y - v.x * self.y)
	}

	@override
	function convert():String {
		return "[\{x}, \{y}, \{z}]"
	}
}