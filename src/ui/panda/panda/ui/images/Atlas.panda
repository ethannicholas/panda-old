package panda.ui.images

uses panda.gl.GL
uses panda.gl.Matrix3
uses panda.gl.Vector2

================================================================================
An image atlas which contains multiple [Sprites](Sprite).
================================================================================
class Atlas : Immutable {
	def sprites:ImmutableArray<Sprite>

	init(img:Image, gl:GL, smoothing:Bit, 
			spriteBounds:ListView<(Int, Int, Int, Int)>) {
		init(img, gl, smoothing, spriteBounds, 
				Array<(Int, Int)>(spriteBounds.count, (0, 0)))

	}

	init(img:Image, gl:GL, smoothing:Bit, 
			spriteBounds:ListView<(Int, Int, Int, Int)>, 
			anchors:ListView<(Int, Int)>) {
		def texture := gl.createTexture()
		gl.activeTexture(GL.TEXTURE0)
		gl.bindTexture(GL.TEXTURE_2D, texture)
		gl.texImage2D(GL.TEXTURE_2D, 0, GL.RGBA, img.width, img.height, 
				GL.BGRA, GL.UNSIGNED_BYTE, img.pixels)
		def filter:UInt32
		if smoothing
			filter := GL.LINEAR
		else
			filter := GL.NEAREST
		gl.texParameter(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, filter)
		gl.texParameter(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, filter)

		def sprites := Array<Sprite>()
		for (i, sprite) in spriteBounds.enumeration {
			sprites.add(Sprite(texture, gl, sprite[2], sprite[3], sprite[0] / 
					img.width, sprite[1] / img.height, (sprite[0] + sprite[2]) / 
					img.width, (sprite[1] + sprite[3]) / img.height, 
					anchors[i][0], anchors[i][1]))
		}
		self.sprites := sprites.convert()
	}
}