// This file was automatically generated by the Panda compiler
#ifndef panda$core$Int64Wrapper_H
#define panda$core$Int64Wrapper_H
extern panda$core$Class panda$core$Int64Wrapper_class;
#ifndef CLASS_panda$core$Int64Wrapper
#define CLASS_panda$core$Int64Wrapper
struct panda$core$Int64Wrapper {
    panda$core$Class* cl;
    Int64 value;
};

#define panda$core$Int64Wrapper$convert_$Rpanda$core$String_INDEX 1
typedef panda$core$String*(panda$core$Int64Wrapper$convert_$Rpanda$core$String_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_INDEX 2
typedef Bit(panda$core$Int64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_TYPE)(panda$core$Int64Wrapper* self, panda$core$Object*);
#define panda$core$Int64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_INDEX 6
typedef panda$core$String*(panda$core$Int64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_TYPE)(panda$core$Int64Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Int8_INDEX 7
typedef Int8(panda$core$Int64Wrapper$convert_$Rpanda$core$Int8_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Int16_INDEX 8
typedef Int16(panda$core$Int64Wrapper$convert_$Rpanda$core$Int16_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Int32_INDEX 9
typedef Int32(panda$core$Int64Wrapper$convert_$Rpanda$core$Int32_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Int64_INDEX 10
typedef Int64(panda$core$Int64Wrapper$convert_$Rpanda$core$Int64_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$UInt8_INDEX 11
typedef UInt8(panda$core$Int64Wrapper$convert_$Rpanda$core$UInt8_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$UInt16_INDEX 12
typedef UInt16(panda$core$Int64Wrapper$convert_$Rpanda$core$UInt16_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$UInt32_INDEX 13
typedef UInt32(panda$core$Int64Wrapper$convert_$Rpanda$core$UInt32_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$UInt64_INDEX 14
typedef UInt64(panda$core$Int64Wrapper$convert_$Rpanda$core$UInt64_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Real32_INDEX 15
typedef Real32(panda$core$Int64Wrapper$convert_$Rpanda$core$Real32_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Real64_INDEX 16
typedef Real64(panda$core$Int64Wrapper$convert_$Rpanda$core$Real64_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$min_Int64_$Rpanda$core$Int64_INDEX 18
typedef Int64(panda$core$Int64Wrapper$min_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$min_Real64_$Rpanda$core$Real64_INDEX 19
typedef Real64(panda$core$Int64Wrapper$min_Real64_$Rpanda$core$Real64_TYPE)(Int64 self, Real64);
#define panda$core$Int64Wrapper$$BAND_Int64_$Rpanda$core$Int64_INDEX 20
typedef Int64(panda$core$Int64Wrapper$$BAND_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$GE_Int64_$Rpanda$core$Bit_INDEX 21
typedef Bit(panda$core$Int64Wrapper$$GE_Int64_$Rpanda$core$Bit_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$ARR_Int64_$Rpanda$core$Bit_INDEX 22
typedef Bit(panda$core$Int64Wrapper$$ARR_Int64_$Rpanda$core$Bit_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$convert_$Rpanda$core$Char_INDEX 23
typedef Char(panda$core$Int64Wrapper$convert_$Rpanda$core$Char_TYPE)(panda$core$Int64Wrapper* self);
#define panda$core$Int64Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$Int64_INDEX 24
typedef Int64(panda$core$Int64Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64);
#define panda$core$Int64Wrapper$$POW_UInt64_$Rpanda$core$Int64_INDEX 25
typedef Int64(panda$core$Int64Wrapper$$POW_UInt64_$Rpanda$core$Int64_TYPE)(Int64 self, UInt64);
#define panda$core$Int64Wrapper$$POW_Real32_$Rpanda$core$Real64_INDEX 26
typedef Real64(panda$core$Int64Wrapper$$POW_Real32_$Rpanda$core$Real64_TYPE)(Int64 self, Real32);
#define panda$core$Int64Wrapper$$BOR_Int64_$Rpanda$core$Int64_INDEX 27
typedef Int64(panda$core$Int64Wrapper$$BOR_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$MUL_Int64_$Rpanda$core$Int64_INDEX 28
typedef Int64(panda$core$Int64Wrapper$$MUL_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$ADD_Int64_$Rpanda$core$Int64_INDEX 29
typedef Int64(panda$core$Int64Wrapper$$ADD_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$max_Int64_$Rpanda$core$Int64_INDEX 30
typedef Int64(panda$core$Int64Wrapper$max_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$max_UInt64_$Rpanda$core$UInt64_INDEX 31
typedef UInt64(panda$core$Int64Wrapper$max_UInt64_$Rpanda$core$UInt64_TYPE)(Int64 self, UInt64);
#define panda$core$Int64Wrapper$max_Real64_$Rpanda$core$Real64_INDEX 32
typedef Real64(panda$core$Int64Wrapper$max_Real64_$Rpanda$core$Real64_TYPE)(Int64 self, Real64);
#define panda$core$Int64Wrapper$$DIV_Int64_$Rpanda$core$Real64_INDEX 33
typedef Real64(panda$core$Int64Wrapper$$DIV_Int64_$Rpanda$core$Real64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$BNOT_$Rpanda$core$Int64_INDEX 34
typedef Int64(panda$core$Int64Wrapper$$BNOT_$Rpanda$core$Int64_TYPE)(Int64 self);
#define panda$core$Int64Wrapper$$SUB_Int64_$Rpanda$core$Int64_INDEX 35
typedef Int64(panda$core$Int64Wrapper$$SUB_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$BXOR_Int64_$Rpanda$core$Int64_INDEX 36
typedef Int64(panda$core$Int64Wrapper$$BXOR_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$INTDIV_Int64_$Rpanda$core$Int64_INDEX 37
typedef Int64(panda$core$Int64Wrapper$$INTDIV_Int64_$Rpanda$core$Int64_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$LE_Int64_$Rpanda$core$Bit_INDEX 38
typedef Bit(panda$core$Int64Wrapper$$LE_Int64_$Rpanda$core$Bit_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$GT_Int64_$Rpanda$core$Bit_INDEX 39
typedef Bit(panda$core$Int64Wrapper$$GT_Int64_$Rpanda$core$Bit_TYPE)(Int64 self, Int64);
#define panda$core$Int64Wrapper$$LT_Int64_$Rpanda$core$Bit_INDEX 40
typedef Bit(panda$core$Int64Wrapper$$LT_Int64_$Rpanda$core$Bit_TYPE)(Int64 self, Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLE_class_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLE_class_Int64_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64, Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLE_class_Int64_Int64_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64, Int64, Int64);
Int64 panda$core$Int64Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$Int64(Int64 self, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLI_class_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLI_class_Int64_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64, Int64);
panda$collections$Iterator$LTpanda$core$Int64$GT* panda$core$Int64Wrapper$$SLI_class_Int64_Int64_Int64_$Rpanda$collections$Iterator$LTpanda$core$Int64$GT(Int64, Int64, Int64);
void panda$core$Int64Wrapper$init_Int64(panda$core$Int64Wrapper* self, Int64);
panda$core$Int64Wrapper* new_panda$core$Int64Wrapper$init_Int64(Int64);
Int64 panda$core$Int64Wrapper$$ADD_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$SUB_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$MUL_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Real64 panda$core$Int64Wrapper$$DIV_Int64_$Rpanda$core$Real64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$INTDIV_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$POW_UInt64_$Rpanda$core$Int64(Int64 self, UInt64);
Real64 panda$core$Int64Wrapper$$POW_Real32_$Rpanda$core$Real64(Int64 self, Real32);
Int64 panda$core$Int64Wrapper$$BOR_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$BAND_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$BXOR_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$$BNOT_$Rpanda$core$Int64(Int64 self);
Bit panda$core$Int64Wrapper$$GT_Int64_$Rpanda$core$Bit(Int64 self, Int64);
Bit panda$core$Int64Wrapper$$GE_Int64_$Rpanda$core$Bit(Int64 self, Int64);
Bit panda$core$Int64Wrapper$$LT_Int64_$Rpanda$core$Bit(Int64 self, Int64);
Bit panda$core$Int64Wrapper$$LE_Int64_$Rpanda$core$Bit(Int64 self, Int64);
Int64 panda$core$Int64Wrapper$max_Int64_$Rpanda$core$Int64(Int64 self, Int64);
UInt64 panda$core$Int64Wrapper$max_UInt64_$Rpanda$core$UInt64(Int64 self, UInt64);
Real64 panda$core$Int64Wrapper$max_Real64_$Rpanda$core$Real64(Int64 self, Real64);
Int64 panda$core$Int64Wrapper$min_Int64_$Rpanda$core$Int64(Int64 self, Int64);
Real64 panda$core$Int64Wrapper$min_Real64_$Rpanda$core$Real64(Int64 self, Real64);
Int64 panda$core$Int64Wrapper$get_sign_$Rpanda$core$Int64(Int64 self);
Int64 panda$core$Int64Wrapper$get_abs_$Rpanda$core$Int64(Int64 self);
Real64 panda$core$Int64Wrapper$get_sqrt_$Rpanda$core$Real64(Int64 self);
Real64 panda$core$Int64Wrapper$get_sin_$Rpanda$core$Real64(Int64 self);
Real64 panda$core$Int64Wrapper$get_cos_$Rpanda$core$Real64(Int64 self);
Real64 panda$core$Int64Wrapper$get_tan_$Rpanda$core$Real64(Int64 self);
Bit panda$core$Int64Wrapper$$ARR_Int64_$Rpanda$core$Bit(Int64 self, Int64);
UInt8 panda$core$Int64Wrapper$get_length_$Rpanda$core$UInt8(Int64 self);
panda$core$String* panda$core$Int64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String(panda$core$Int64Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
Bit panda$core$Int64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit(panda$core$Int64Wrapper* self, panda$core$Object*);
Int8 panda$core$Int64Wrapper$convert_$Rpanda$core$Int8(panda$core$Int64Wrapper* self);
Int16 panda$core$Int64Wrapper$convert_$Rpanda$core$Int16(panda$core$Int64Wrapper* self);
Int32 panda$core$Int64Wrapper$convert_$Rpanda$core$Int32(panda$core$Int64Wrapper* self);
Int64 panda$core$Int64Wrapper$convert_$Rpanda$core$Int64(panda$core$Int64Wrapper* self);
UInt8 panda$core$Int64Wrapper$convert_$Rpanda$core$UInt8(panda$core$Int64Wrapper* self);
UInt16 panda$core$Int64Wrapper$convert_$Rpanda$core$UInt16(panda$core$Int64Wrapper* self);
UInt32 panda$core$Int64Wrapper$convert_$Rpanda$core$UInt32(panda$core$Int64Wrapper* self);
UInt64 panda$core$Int64Wrapper$convert_$Rpanda$core$UInt64(panda$core$Int64Wrapper* self);
Char panda$core$Int64Wrapper$convert_$Rpanda$core$Char(panda$core$Int64Wrapper* self);
Real32 panda$core$Int64Wrapper$convert_$Rpanda$core$Real32(panda$core$Int64Wrapper* self);
Real64 panda$core$Int64Wrapper$convert_$Rpanda$core$Real64(panda$core$Int64Wrapper* self);
panda$core$String* panda$core$Int64Wrapper$convert_$Rpanda$core$String(panda$core$Int64Wrapper* self);
void panda$core$Int64Wrapper$$classInit_class();
extern Int64 class_panda$core$Int64Wrapper$MIN;
extern Int64 class_panda$core$Int64Wrapper$MAX;
extern UInt8 class_panda$core$Int64Wrapper$BITS;
extern Bit class_panda$core$Int64Wrapper$$classInited;
#endif
#endif
