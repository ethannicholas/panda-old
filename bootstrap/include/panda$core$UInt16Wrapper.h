// This file was automatically generated by the Panda compiler
#ifndef panda$core$UInt16Wrapper_H
#define panda$core$UInt16Wrapper_H
extern panda$core$Class panda$core$UInt16Wrapper_class;
#ifndef CLASS_panda$core$UInt16Wrapper
#define CLASS_panda$core$UInt16Wrapper
struct panda$core$UInt16Wrapper {
    panda$core$Class* cl;
    UInt16 value;
};

#define panda$core$UInt16Wrapper$convert_$Rpanda$core$String_INDEX 1
typedef panda$core$String*(panda$core$UInt16Wrapper$convert_$Rpanda$core$String_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_INDEX 2
typedef Bit(panda$core$UInt16Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_TYPE)(panda$core$UInt16Wrapper* self, panda$core$Object*);
#define panda$core$UInt16Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_INDEX 6
typedef panda$core$String*(panda$core$UInt16Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_TYPE)(panda$core$UInt16Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Int8_INDEX 7
typedef Int8(panda$core$UInt16Wrapper$convert_$Rpanda$core$Int8_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Int16_INDEX 8
typedef Int16(panda$core$UInt16Wrapper$convert_$Rpanda$core$Int16_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Int32_INDEX 9
typedef Int32(panda$core$UInt16Wrapper$convert_$Rpanda$core$Int32_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Int64_INDEX 10
typedef Int64(panda$core$UInt16Wrapper$convert_$Rpanda$core$Int64_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt8_INDEX 11
typedef UInt8(panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt8_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt16_INDEX 12
typedef UInt16(panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt16_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt32_INDEX 13
typedef UInt32(panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt32_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt64_INDEX 14
typedef UInt64(panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt64_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Real32_INDEX 15
typedef Real32(panda$core$UInt16Wrapper$convert_$Rpanda$core$Real32_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Real64_INDEX 16
typedef Real64(panda$core$UInt16Wrapper$convert_$Rpanda$core$Real64_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$min_Int32_$Rpanda$core$Int32_INDEX 18
typedef Int32(panda$core$UInt16Wrapper$min_Int32_$Rpanda$core$Int32_TYPE)(UInt16 self, Int32);
#define panda$core$UInt16Wrapper$min_Int64_$Rpanda$core$Int64_INDEX 19
typedef Int64(panda$core$UInt16Wrapper$min_Int64_$Rpanda$core$Int64_TYPE)(UInt16 self, Int64);
#define panda$core$UInt16Wrapper$min_UInt32_$Rpanda$core$UInt32_INDEX 20
typedef UInt32(panda$core$UInt16Wrapper$min_UInt32_$Rpanda$core$UInt32_TYPE)(UInt16 self, UInt32);
#define panda$core$UInt16Wrapper$min_UInt64_$Rpanda$core$UInt64_INDEX 21
typedef UInt64(panda$core$UInt16Wrapper$min_UInt64_$Rpanda$core$UInt64_TYPE)(UInt16 self, UInt64);
#define panda$core$UInt16Wrapper$min_Real32_$Rpanda$core$Real32_INDEX 22
typedef Real32(panda$core$UInt16Wrapper$min_Real32_$Rpanda$core$Real32_TYPE)(UInt16 self, Real32);
#define panda$core$UInt16Wrapper$min_Real64_$Rpanda$core$Real64_INDEX 23
typedef Real64(panda$core$UInt16Wrapper$min_Real64_$Rpanda$core$Real64_TYPE)(UInt16 self, Real64);
#define panda$core$UInt16Wrapper$$BAND_UInt16_$Rpanda$core$UInt16_INDEX 24
typedef UInt16(panda$core$UInt16Wrapper$$BAND_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$GE_UInt16_$Rpanda$core$Bit_INDEX 25
typedef Bit(panda$core$UInt16Wrapper$$GE_UInt16_$Rpanda$core$Bit_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$ARR_Int64_$Rpanda$core$Bit_INDEX 26
typedef Bit(panda$core$UInt16Wrapper$$ARR_Int64_$Rpanda$core$Bit_TYPE)(panda$core$UInt16Wrapper* self, Int64);
#define panda$core$UInt16Wrapper$convert_$Rpanda$core$Char_INDEX 27
typedef Char(panda$core$UInt16Wrapper$convert_$Rpanda$core$Char_TYPE)(panda$core$UInt16Wrapper* self);
#define panda$core$UInt16Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$UInt16_INDEX 28
typedef UInt16(panda$core$UInt16Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$UInt16_TYPE)(panda$core$UInt16Wrapper* self, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64);
#define panda$core$UInt16Wrapper$$POW_UInt16_$Rpanda$core$UInt16_INDEX 29
typedef UInt16(panda$core$UInt16Wrapper$$POW_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$POW_Real32_$Rpanda$core$Real32_INDEX 30
typedef Real32(panda$core$UInt16Wrapper$$POW_Real32_$Rpanda$core$Real32_TYPE)(UInt16 self, Real32);
#define panda$core$UInt16Wrapper$$BOR_UInt16_$Rpanda$core$UInt16_INDEX 31
typedef UInt16(panda$core$UInt16Wrapper$$BOR_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$MUL_UInt16_$Rpanda$core$UInt16_INDEX 32
typedef UInt16(panda$core$UInt16Wrapper$$MUL_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$ADD_UInt16_$Rpanda$core$UInt16_INDEX 33
typedef UInt16(panda$core$UInt16Wrapper$$ADD_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$max_Int32_$Rpanda$core$Int32_INDEX 34
typedef Int32(panda$core$UInt16Wrapper$max_Int32_$Rpanda$core$Int32_TYPE)(UInt16 self, Int32);
#define panda$core$UInt16Wrapper$max_Int64_$Rpanda$core$Int64_INDEX 35
typedef Int64(panda$core$UInt16Wrapper$max_Int64_$Rpanda$core$Int64_TYPE)(UInt16 self, Int64);
#define panda$core$UInt16Wrapper$max_UInt32_$Rpanda$core$UInt32_INDEX 36
typedef UInt32(panda$core$UInt16Wrapper$max_UInt32_$Rpanda$core$UInt32_TYPE)(UInt16 self, UInt32);
#define panda$core$UInt16Wrapper$max_UInt64_$Rpanda$core$UInt64_INDEX 37
typedef UInt64(panda$core$UInt16Wrapper$max_UInt64_$Rpanda$core$UInt64_TYPE)(UInt16 self, UInt64);
#define panda$core$UInt16Wrapper$max_Real32_$Rpanda$core$Real32_INDEX 38
typedef Real32(panda$core$UInt16Wrapper$max_Real32_$Rpanda$core$Real32_TYPE)(UInt16 self, Real32);
#define panda$core$UInt16Wrapper$max_Real64_$Rpanda$core$Real64_INDEX 39
typedef Real64(panda$core$UInt16Wrapper$max_Real64_$Rpanda$core$Real64_TYPE)(UInt16 self, Real64);
#define panda$core$UInt16Wrapper$$DIV_UInt16_$Rpanda$core$Real32_INDEX 40
typedef Real32(panda$core$UInt16Wrapper$$DIV_UInt16_$Rpanda$core$Real32_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$BNOT_$Rpanda$core$UInt16_INDEX 41
typedef UInt16(panda$core$UInt16Wrapper$$BNOT_$Rpanda$core$UInt16_TYPE)(UInt16 self);
#define panda$core$UInt16Wrapper$$SUB_UInt16_$Rpanda$core$UInt16_INDEX 42
typedef UInt16(panda$core$UInt16Wrapper$$SUB_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$BXOR_UInt16_$Rpanda$core$UInt16_INDEX 43
typedef UInt16(panda$core$UInt16Wrapper$$BXOR_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$INTDIV_UInt16_$Rpanda$core$UInt16_INDEX 44
typedef UInt16(panda$core$UInt16Wrapper$$INTDIV_UInt16_$Rpanda$core$UInt16_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$LE_UInt16_$Rpanda$core$Bit_INDEX 45
typedef Bit(panda$core$UInt16Wrapper$$LE_UInt16_$Rpanda$core$Bit_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$GT_UInt16_$Rpanda$core$Bit_INDEX 46
typedef Bit(panda$core$UInt16Wrapper$$GT_UInt16_$Rpanda$core$Bit_TYPE)(UInt16 self, UInt16);
#define panda$core$UInt16Wrapper$$LT_UInt16_$Rpanda$core$Bit_INDEX 47
typedef Bit(panda$core$UInt16Wrapper$$LT_UInt16_$Rpanda$core$Bit_TYPE)(UInt16 self, UInt16);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLE_class_UInt16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLE_class_UInt16_UInt16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16, UInt16);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLE_class_UInt16_UInt16_Int16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16, UInt16, Int16);
UInt16 panda$core$UInt16Wrapper$$SLE_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_$Rpanda$core$UInt16(panda$core$UInt16Wrapper* self, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLI_class_UInt16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLI_class_UInt16_UInt16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16, UInt16);
panda$collections$Iterator$LTpanda$core$UInt16$GT* panda$core$UInt16Wrapper$$SLI_class_UInt16_UInt16_Int16_$Rpanda$collections$Iterator$LTpanda$core$UInt16$GT(UInt16, UInt16, Int16);
void panda$core$UInt16Wrapper$init_UInt16(panda$core$UInt16Wrapper* self, UInt16);
panda$core$UInt16Wrapper* new_panda$core$UInt16Wrapper$init_UInt16(UInt16);
UInt16 panda$core$UInt16Wrapper$$ADD_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$SUB_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$MUL_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
Real32 panda$core$UInt16Wrapper$$DIV_UInt16_$Rpanda$core$Real32(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$INTDIV_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$POW_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
Real32 panda$core$UInt16Wrapper$$POW_Real32_$Rpanda$core$Real32(UInt16 self, Real32);
UInt16 panda$core$UInt16Wrapper$$BOR_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$BAND_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$BXOR_UInt16_$Rpanda$core$UInt16(UInt16 self, UInt16);
UInt16 panda$core$UInt16Wrapper$$BNOT_$Rpanda$core$UInt16(UInt16 self);
Bit panda$core$UInt16Wrapper$$GT_UInt16_$Rpanda$core$Bit(UInt16 self, UInt16);
Bit panda$core$UInt16Wrapper$$GE_UInt16_$Rpanda$core$Bit(UInt16 self, UInt16);
Bit panda$core$UInt16Wrapper$$LT_UInt16_$Rpanda$core$Bit(UInt16 self, UInt16);
Bit panda$core$UInt16Wrapper$$LE_UInt16_$Rpanda$core$Bit(UInt16 self, UInt16);
Int32 panda$core$UInt16Wrapper$max_Int32_$Rpanda$core$Int32(UInt16 self, Int32);
Int64 panda$core$UInt16Wrapper$max_Int64_$Rpanda$core$Int64(UInt16 self, Int64);
UInt32 panda$core$UInt16Wrapper$max_UInt32_$Rpanda$core$UInt32(UInt16 self, UInt32);
UInt64 panda$core$UInt16Wrapper$max_UInt64_$Rpanda$core$UInt64(UInt16 self, UInt64);
Real32 panda$core$UInt16Wrapper$max_Real32_$Rpanda$core$Real32(UInt16 self, Real32);
Real64 panda$core$UInt16Wrapper$max_Real64_$Rpanda$core$Real64(UInt16 self, Real64);
Int32 panda$core$UInt16Wrapper$min_Int32_$Rpanda$core$Int32(UInt16 self, Int32);
Int64 panda$core$UInt16Wrapper$min_Int64_$Rpanda$core$Int64(UInt16 self, Int64);
UInt32 panda$core$UInt16Wrapper$min_UInt32_$Rpanda$core$UInt32(UInt16 self, UInt32);
UInt64 panda$core$UInt16Wrapper$min_UInt64_$Rpanda$core$UInt64(UInt16 self, UInt64);
Real32 panda$core$UInt16Wrapper$min_Real32_$Rpanda$core$Real32(UInt16 self, Real32);
Real64 panda$core$UInt16Wrapper$min_Real64_$Rpanda$core$Real64(UInt16 self, Real64);
Real32 panda$core$UInt16Wrapper$get_sqrt_$Rpanda$core$Real32(UInt16 self);
Real32 panda$core$UInt16Wrapper$get_sin_$Rpanda$core$Real32(UInt16 self);
Real32 panda$core$UInt16Wrapper$get_cos_$Rpanda$core$Real32(UInt16 self);
Real32 panda$core$UInt16Wrapper$get_tan_$Rpanda$core$Real32(UInt16 self);
Bit panda$core$UInt16Wrapper$$ARR_Int64_$Rpanda$core$Bit(panda$core$UInt16Wrapper* self, Int64);
UInt8 panda$core$UInt16Wrapper$get_length_$Rpanda$core$UInt8(UInt16 self);
panda$core$String* panda$core$UInt16Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String(panda$core$UInt16Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
Bit panda$core$UInt16Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit(panda$core$UInt16Wrapper* self, panda$core$Object*);
Int8 panda$core$UInt16Wrapper$convert_$Rpanda$core$Int8(panda$core$UInt16Wrapper* self);
Int16 panda$core$UInt16Wrapper$convert_$Rpanda$core$Int16(panda$core$UInt16Wrapper* self);
Int32 panda$core$UInt16Wrapper$convert_$Rpanda$core$Int32(panda$core$UInt16Wrapper* self);
Int64 panda$core$UInt16Wrapper$convert_$Rpanda$core$Int64(panda$core$UInt16Wrapper* self);
UInt8 panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt8(panda$core$UInt16Wrapper* self);
UInt16 panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt16(panda$core$UInt16Wrapper* self);
UInt32 panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt32(panda$core$UInt16Wrapper* self);
UInt64 panda$core$UInt16Wrapper$convert_$Rpanda$core$UInt64(panda$core$UInt16Wrapper* self);
Char panda$core$UInt16Wrapper$convert_$Rpanda$core$Char(panda$core$UInt16Wrapper* self);
Real32 panda$core$UInt16Wrapper$convert_$Rpanda$core$Real32(panda$core$UInt16Wrapper* self);
Real64 panda$core$UInt16Wrapper$convert_$Rpanda$core$Real64(panda$core$UInt16Wrapper* self);
panda$core$String* panda$core$UInt16Wrapper$convert_$Rpanda$core$String(panda$core$UInt16Wrapper* self);
void panda$core$UInt16Wrapper$$classInit_class();
extern UInt16 class_panda$core$UInt16Wrapper$MIN;
extern UInt16 class_panda$core$UInt16Wrapper$MAX;
extern UInt8 class_panda$core$UInt16Wrapper$BITS;
extern Bit class_panda$core$UInt16Wrapper$$classInited;
#endif
#endif
