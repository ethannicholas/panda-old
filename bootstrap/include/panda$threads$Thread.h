// This file was automatically generated by the Panda compiler
#ifndef panda$threads$Thread_H
#define panda$threads$Thread_H
extern panda$core$Class panda$threads$Thread_class;
#ifndef CLASS_panda$threads$Thread
#define CLASS_panda$threads$Thread
struct panda$threads$Thread {
    panda$core$Class* cl;
    void* nativeThread;
    panda$threads$MessageQueue* queue;
    Bit preventsExit;
    void* threadLocals;
    void** threadEntry;
};

#define panda$threads$Thread$createQueue_$Rpanda$threads$MessageQueue$LTpanda$core$Immutable$Z$GT_INDEX 4
typedef panda$threads$MessageQueue*(panda$threads$Thread$createQueue_$Rpanda$threads$MessageQueue$LTpanda$core$Immutable$Z$GT_TYPE)(panda$threads$Thread* self);
panda$threads$MessageQueue* panda$threads$Thread$createQueue_$Rpanda$threads$MessageQueue$LTpanda$core$Immutable$Z$GT(panda$threads$Thread* self);
void panda$threads$Thread$init(panda$threads$Thread* self);
panda$threads$Thread* new_panda$threads$Thread$init();
void panda$threads$Thread$init_$LP$RP$EQ$AM$GT$p$LP$RP_Bit(panda$threads$Thread* self, void**, Bit);
panda$threads$Thread* new_panda$threads$Thread$init_$LP$RP$EQ$AM$GT$p$LP$RP_Bit(void**, Bit);
void panda$threads$Thread$run(panda$threads$Thread* self);
void panda$threads$Thread$start(panda$threads$Thread* self);
void panda$threads$Thread$start_panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT(panda$threads$Thread* self, panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT*);
panda$threads$Thread* panda$threads$Thread$start_class_$LP$RP$EQ$AM$GT$p$LP$RP_$Rpanda$threads$Thread(void**);
panda$threads$Thread* panda$threads$Thread$start_class_$LP$RP$EQ$AM$GT$p$LP$RP_panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT_$Rpanda$threads$Thread(void**, panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT*);
panda$threads$Thread* panda$threads$Thread$start_class_$LP$RP$EQ$AM$GT$p$LP$RP_panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT_Bit_$Rpanda$threads$Thread(void**, panda$collections$MapView$LTpanda$core$Immutable$Cpanda$core$Immutable$GT*, Bit);
panda$threads$Thread* panda$threads$Thread$start_class_$LP$RP$EQ$AM$GT$p$LP$RP_Bit_$Rpanda$threads$Thread(void**, Bit);
panda$threads$Thread* panda$threads$Thread$currentThread_class_$Rpanda$threads$Thread();
Int64 panda$threads$Thread$preferredThreadCount_class_$Rpanda$core$Int64();
void panda$threads$Thread$sleep_class_Int64(Int64);
void panda$threads$Thread$startThread_panda$collections$HashMap$LTpanda$core$Immutable$Cpanda$core$Object$GT(panda$threads$Thread* self, panda$collections$HashMap$LTpanda$core$Immutable$Cpanda$core$Object$GT*);
void panda$threads$Thread$threadExit_class();
void panda$threads$Thread$$classInit_class();
panda$collections$Map$LTpanda$core$Immutable$Cpanda$core$Object$GT* panda$threads$Thread$$initcontext_class_$Rpanda$collections$Map$LTpanda$core$Immutable$Cpanda$core$Object$GT();
extern panda$collections$Map$LTpanda$core$Immutable$Cpanda$core$Object$GT* class_panda$threads$Thread$context;
extern Int64 class_panda$threads$Thread$context$index;
extern Bit class_panda$threads$Thread$$classInited;
#endif
#endif
