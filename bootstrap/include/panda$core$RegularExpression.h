// This file was automatically generated by the Panda compiler
#ifndef panda$core$RegularExpression_H
#define panda$core$RegularExpression_H
extern panda$core$Class panda$core$RegularExpression_class;
#ifndef CLASS_panda$core$RegularExpression
#define CLASS_panda$core$RegularExpression
struct panda$core$RegularExpression {
    panda$core$Class* cl;
    panda$core$String* pattern;
    void* nativeHandle;
};

#define panda$core$RegularExpression$finalize_INDEX 0
typedef void(panda$core$RegularExpression$finalize_TYPE)(panda$core$RegularExpression* self);
#define panda$core$RegularExpression$convert_$Rpanda$core$String_INDEX 1
typedef panda$core$String*(panda$core$RegularExpression$convert_$Rpanda$core$String_TYPE)(panda$core$RegularExpression* self);
#define panda$core$RegularExpression$matcher_panda$core$String_$Rpanda$core$Matcher_INDEX 4
typedef panda$core$Matcher*(panda$core$RegularExpression$matcher_panda$core$String_$Rpanda$core$Matcher_TYPE)(panda$core$RegularExpression* self, panda$core$String*);
#define panda$core$RegularExpression$close_INDEX 5
typedef void(panda$core$RegularExpression$close_TYPE)(panda$core$RegularExpression* self);
#define panda$core$RegularExpression$clone_$Rpanda$core$RegularExpression_INDEX 6
typedef panda$core$RegularExpression*(panda$core$RegularExpression$clone_$Rpanda$core$RegularExpression_TYPE)(panda$core$RegularExpression* self);
void panda$core$RegularExpression$init_panda$core$String(panda$core$RegularExpression* self, panda$core$String*);
panda$core$RegularExpression* new_panda$core$RegularExpression$init_panda$core$String(panda$core$String*);
void panda$core$RegularExpression$init_panda$core$String_Int64(panda$core$RegularExpression* self, panda$core$String*, Int64);
panda$core$RegularExpression* new_panda$core$RegularExpression$init_panda$core$String_Int64(panda$core$String*, Int64);
panda$core$Matcher* panda$core$RegularExpression$matcher_panda$core$String_$Rpanda$core$Matcher(panda$core$RegularExpression* self, panda$core$String*);
panda$core$String* panda$core$RegularExpression$convert_$Rpanda$core$String(panda$core$RegularExpression* self);
void panda$core$RegularExpression$finalize(panda$core$RegularExpression* self);
panda$core$String* panda$core$RegularExpression$escape_class_panda$core$String_$Rpanda$core$String(panda$core$String*);
panda$core$RegularExpression* panda$core$RegularExpression$clone_$Rpanda$core$RegularExpression(panda$core$RegularExpression* self);
void panda$core$RegularExpression$compile_panda$core$String_Int64(panda$core$RegularExpression* self, panda$core$String*, Int64);
void panda$core$RegularExpression$close(panda$core$RegularExpression* self);
void panda$core$RegularExpression$$classInit_class();
extern Int64 class_panda$core$RegularExpression$MULTILINE;
extern Bit class_panda$core$RegularExpression$$classInited;
#endif
#endif
