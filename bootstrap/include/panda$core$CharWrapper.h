// This file was automatically generated by the Panda compiler
#ifndef panda$core$CharWrapper_H
#define panda$core$CharWrapper_H
extern panda$core$Class panda$core$CharWrapper_class;
#ifndef CLASS_panda$core$CharWrapper
#define CLASS_panda$core$CharWrapper
struct panda$core$CharWrapper {
    panda$core$Class* cl;
    Char value;
};

#define panda$core$CharWrapper$convert_$Rpanda$core$String_INDEX 1
typedef panda$core$String*(panda$core$CharWrapper$convert_$Rpanda$core$String_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_INDEX 2
typedef Bit(panda$core$CharWrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_TYPE)(panda$core$CharWrapper* self, panda$core$Object*);
#define panda$core$CharWrapper$get_hash_$Rpanda$core$Int64_INDEX 3
typedef Int64(panda$core$CharWrapper$get_hash_$Rpanda$core$Int64_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$$MUL_Int64_$Rpanda$core$String_INDEX 4
typedef panda$core$String*(panda$core$CharWrapper$$MUL_Int64_$Rpanda$core$String_TYPE)(Char self, Int64);
#define panda$core$CharWrapper$$GE_Char_$Rpanda$core$Bit_INDEX 5
typedef Bit(panda$core$CharWrapper$$GE_Char_$Rpanda$core$Bit_TYPE)(Char self, Char);
#define panda$core$CharWrapper$convert_$Rpanda$core$Int8_INDEX 6
typedef Int8(panda$core$CharWrapper$convert_$Rpanda$core$Int8_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$UInt8_INDEX 7
typedef UInt8(panda$core$CharWrapper$convert_$Rpanda$core$UInt8_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$Int16_INDEX 8
typedef Int16(panda$core$CharWrapper$convert_$Rpanda$core$Int16_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$UInt16_INDEX 9
typedef UInt16(panda$core$CharWrapper$convert_$Rpanda$core$UInt16_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$Int32_INDEX 10
typedef Int32(panda$core$CharWrapper$convert_$Rpanda$core$Int32_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$UInt32_INDEX 11
typedef UInt32(panda$core$CharWrapper$convert_$Rpanda$core$UInt32_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$Int64_INDEX 12
typedef Int64(panda$core$CharWrapper$convert_$Rpanda$core$Int64_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$convert_$Rpanda$core$UInt64_INDEX 13
typedef UInt64(panda$core$CharWrapper$convert_$Rpanda$core$UInt64_TYPE)(panda$core$CharWrapper* self);
#define panda$core$CharWrapper$format_panda$core$String_$Rpanda$core$String_INDEX 14
typedef panda$core$String*(panda$core$CharWrapper$format_panda$core$String_$Rpanda$core$String_TYPE)(panda$core$CharWrapper* self, panda$core$String*);
#define panda$core$CharWrapper$toUppercase_$Rpanda$core$Char_INDEX 15
typedef Char(panda$core$CharWrapper$toUppercase_$Rpanda$core$Char_TYPE)(Char self);
#define panda$core$CharWrapper$toTitlecase_$Rpanda$core$Char_INDEX 16
typedef Char(panda$core$CharWrapper$toTitlecase_$Rpanda$core$Char_TYPE)(Char self);
#define panda$core$CharWrapper$$LE_Char_$Rpanda$core$Bit_INDEX 17
typedef Bit(panda$core$CharWrapper$$LE_Char_$Rpanda$core$Bit_TYPE)(Char self, Char);
#define panda$core$CharWrapper$toLowercase_$Rpanda$core$Char_INDEX 18
typedef Char(panda$core$CharWrapper$toLowercase_$Rpanda$core$Char_TYPE)(Char self);
#define panda$core$CharWrapper$$GT_Char_$Rpanda$core$Bit_INDEX 19
typedef Bit(panda$core$CharWrapper$$GT_Char_$Rpanda$core$Bit_TYPE)(Char self, Char);
#define panda$core$CharWrapper$$LT_Char_$Rpanda$core$Bit_INDEX 20
typedef Bit(panda$core$CharWrapper$$LT_Char_$Rpanda$core$Bit_TYPE)(Char self, Char);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLE_class_Char_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLE_class_Char_Char_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char, Char);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLE_class_Char_Char_Int16_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char, Char, Int16);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLI_class_Char_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLI_class_Char_Char_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char, Char);
panda$collections$ListView$LTpanda$core$Char$GT* panda$core$CharWrapper$$SLI_class_Char_Char_Int16_$Rpanda$collections$ListView$LTpanda$core$Char$GT(Char, Char, Int16);
void panda$core$CharWrapper$init_Char(panda$core$CharWrapper* self, Char);
panda$core$CharWrapper* new_panda$core$CharWrapper$init_Char(Char);
Bit panda$core$CharWrapper$get_isWhitespace_$Rpanda$core$Bit(Char self);
Bit panda$core$CharWrapper$get_isLowercase_$Rpanda$core$Bit(Char self);
Bit panda$core$CharWrapper$get_isUppercase_$Rpanda$core$Bit(Char self);
Bit panda$core$CharWrapper$get_isTitlecase_$Rpanda$core$Bit(Char self);
Char panda$core$CharWrapper$toUppercase_$Rpanda$core$Char(Char self);
Char panda$core$CharWrapper$toLowercase_$Rpanda$core$Char(Char self);
Char panda$core$CharWrapper$toTitlecase_$Rpanda$core$Char(Char self);
Bit panda$core$CharWrapper$$LT_Char_$Rpanda$core$Bit(Char self, Char);
Bit panda$core$CharWrapper$$GT_Char_$Rpanda$core$Bit(Char self, Char);
Bit panda$core$CharWrapper$$LE_Char_$Rpanda$core$Bit(Char self, Char);
Bit panda$core$CharWrapper$$GE_Char_$Rpanda$core$Bit(Char self, Char);
panda$core$String* panda$core$CharWrapper$$MUL_Int64_$Rpanda$core$String(Char self, Int64);
panda$core$String* panda$core$CharWrapper$$MUL_class_Int64_Char_$Rpanda$core$String(Int64, Char);
Bit panda$core$CharWrapper$$EQ_panda$core$Object_$Rpanda$core$Bit(panda$core$CharWrapper* self, panda$core$Object*);
Int64 panda$core$CharWrapper$get_hash_$Rpanda$core$Int64(panda$core$CharWrapper* self);
Int8 panda$core$CharWrapper$convert_$Rpanda$core$Int8(panda$core$CharWrapper* self);
UInt8 panda$core$CharWrapper$convert_$Rpanda$core$UInt8(panda$core$CharWrapper* self);
Int16 panda$core$CharWrapper$convert_$Rpanda$core$Int16(panda$core$CharWrapper* self);
UInt16 panda$core$CharWrapper$convert_$Rpanda$core$UInt16(panda$core$CharWrapper* self);
Int32 panda$core$CharWrapper$convert_$Rpanda$core$Int32(panda$core$CharWrapper* self);
UInt32 panda$core$CharWrapper$convert_$Rpanda$core$UInt32(panda$core$CharWrapper* self);
Int64 panda$core$CharWrapper$convert_$Rpanda$core$Int64(panda$core$CharWrapper* self);
UInt64 panda$core$CharWrapper$convert_$Rpanda$core$UInt64(panda$core$CharWrapper* self);
panda$core$String* panda$core$CharWrapper$convert_$Rpanda$core$String(panda$core$CharWrapper* self);
panda$core$String* panda$core$CharWrapper$format_panda$core$String_$Rpanda$core$String(panda$core$CharWrapper* self, panda$core$String*);
void panda$core$CharWrapper$$classInit_class();
extern Char class_panda$core$CharWrapper$MIN;
extern Char class_panda$core$CharWrapper$MAX;
extern Bit class_panda$core$CharWrapper$$classInited;
#endif
#endif
