// This file was automatically generated by the Panda compiler
#ifndef panda$core$Real64Wrapper_H
#define panda$core$Real64Wrapper_H
extern panda$core$Class panda$core$Real64Wrapper_class;
#ifndef CLASS_panda$core$Real64Wrapper
#define CLASS_panda$core$Real64Wrapper
struct panda$core$Real64Wrapper {
    panda$core$Class* cl;
    Real64 value;
};

#define panda$core$Real64Wrapper$convert_$Rpanda$core$String_INDEX 1
typedef panda$core$String*(panda$core$Real64Wrapper$convert_$Rpanda$core$String_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_INDEX 2
typedef Bit(panda$core$Real64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit_TYPE)(panda$core$Real64Wrapper* self, panda$core$Object*);
#define panda$core$Real64Wrapper$get_hash_$Rpanda$core$Int64_INDEX 3
typedef Int64(panda$core$Real64Wrapper$get_hash_$Rpanda$core$Int64_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_INDEX 6
typedef panda$core$String*(panda$core$Real64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String_TYPE)(panda$core$Real64Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Int8_INDEX 7
typedef Int8(panda$core$Real64Wrapper$convert_$Rpanda$core$Int8_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Int16_INDEX 8
typedef Int16(panda$core$Real64Wrapper$convert_$Rpanda$core$Int16_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Int32_INDEX 9
typedef Int32(panda$core$Real64Wrapper$convert_$Rpanda$core$Int32_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Int64_INDEX 10
typedef Int64(panda$core$Real64Wrapper$convert_$Rpanda$core$Int64_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$UInt8_INDEX 11
typedef UInt8(panda$core$Real64Wrapper$convert_$Rpanda$core$UInt8_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$UInt16_INDEX 12
typedef UInt16(panda$core$Real64Wrapper$convert_$Rpanda$core$UInt16_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$UInt32_INDEX 13
typedef UInt32(panda$core$Real64Wrapper$convert_$Rpanda$core$UInt32_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$UInt64_INDEX 14
typedef UInt64(panda$core$Real64Wrapper$convert_$Rpanda$core$UInt64_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Real32_INDEX 15
typedef Real32(panda$core$Real64Wrapper$convert_$Rpanda$core$Real32_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$convert_$Rpanda$core$Real64_INDEX 16
typedef Real64(panda$core$Real64Wrapper$convert_$Rpanda$core$Real64_TYPE)(panda$core$Real64Wrapper* self);
#define panda$core$Real64Wrapper$min_Real64_$Rpanda$core$Real64_INDEX 18
typedef Real64(panda$core$Real64Wrapper$min_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$GE_Real64_$Rpanda$core$Bit_INDEX 19
typedef Bit(panda$core$Real64Wrapper$$GE_Real64_$Rpanda$core$Bit_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$POW_Real64_$Rpanda$core$Real64_INDEX 20
typedef Real64(panda$core$Real64Wrapper$$POW_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$MUL_Real64_$Rpanda$core$Real64_INDEX 21
typedef Real64(panda$core$Real64Wrapper$$MUL_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$ADD_Real64_$Rpanda$core$Real64_INDEX 22
typedef Real64(panda$core$Real64Wrapper$$ADD_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$max_Real64_$Rpanda$core$Real64_INDEX 23
typedef Real64(panda$core$Real64Wrapper$max_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$DIV_Real64_$Rpanda$core$Real64_INDEX 24
typedef Real64(panda$core$Real64Wrapper$$DIV_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$SUB_Real64_$Rpanda$core$Real64_INDEX 25
typedef Real64(panda$core$Real64Wrapper$$SUB_Real64_$Rpanda$core$Real64_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$LE_Real64_$Rpanda$core$Bit_INDEX 26
typedef Bit(panda$core$Real64Wrapper$$LE_Real64_$Rpanda$core$Bit_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$GT_Real64_$Rpanda$core$Bit_INDEX 27
typedef Bit(panda$core$Real64Wrapper$$GT_Real64_$Rpanda$core$Bit_TYPE)(Real64 self, Real64);
#define panda$core$Real64Wrapper$$LT_Real64_$Rpanda$core$Bit_INDEX 28
typedef Bit(panda$core$Real64Wrapper$$LT_Real64_$Rpanda$core$Bit_TYPE)(Real64 self, Real64);
panda$collections$ListView$LTpanda$core$Real64$GT* panda$core$Real64Wrapper$$SLE_class_Real64_Real64_$Rpanda$collections$ListView$LTpanda$core$Real64$GT(Real64, Real64);
panda$collections$ListView$LTpanda$core$Real64$GT* panda$core$Real64Wrapper$$SLE_class_Real64_Real64_Real64_$Rpanda$collections$ListView$LTpanda$core$Real64$GT(Real64, Real64, Real64);
panda$collections$ListView$LTpanda$core$Real64$GT* panda$core$Real64Wrapper$$SLI_class_Real64_Real64_$Rpanda$collections$ListView$LTpanda$core$Real64$GT(Real64, Real64);
panda$collections$ListView$LTpanda$core$Real64$GT* panda$core$Real64Wrapper$$SLI_class_Real64_Real64_Real64_$Rpanda$collections$ListView$LTpanda$core$Real64$GT(Real64, Real64, Real64);
Real64 panda$core$Real64Wrapper$atan2_class_Real64_Real64_$Rpanda$core$Real64(Real64, Real64);
void panda$core$Real64Wrapper$init_Real64(panda$core$Real64Wrapper* self, Real64);
panda$core$Real64Wrapper* new_panda$core$Real64Wrapper$init_Real64(Real64);
Real64 panda$core$Real64Wrapper$$ADD_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$$SUB_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$$MUL_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$$DIV_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$$POW_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Bit panda$core$Real64Wrapper$$GT_Real64_$Rpanda$core$Bit(Real64 self, Real64);
Bit panda$core$Real64Wrapper$$GE_Real64_$Rpanda$core$Bit(Real64 self, Real64);
Bit panda$core$Real64Wrapper$$LT_Real64_$Rpanda$core$Bit(Real64 self, Real64);
Bit panda$core$Real64Wrapper$$LE_Real64_$Rpanda$core$Bit(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$max_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Real64 panda$core$Real64Wrapper$min_Real64_$Rpanda$core$Real64(Real64 self, Real64);
Int64 panda$core$Real64Wrapper$get_sign_$Rpanda$core$Int64(Real64 self);
Real64 panda$core$Real64Wrapper$get_abs_$Rpanda$core$Real64(Real64 self);
Bit panda$core$Real64Wrapper$get_isInfinite_$Rpanda$core$Bit(Real64 self);
Bit panda$core$Real64Wrapper$get_isNaN_$Rpanda$core$Bit(Real64 self);
Real64 panda$core$Real64Wrapper$get_sqrt_$Rpanda$core$Real64(Real64 self);
Real64 panda$core$Real64Wrapper$get_floor_$Rpanda$core$Real64(Real64 self);
Real64 panda$core$Real64Wrapper$get_ceil_$Rpanda$core$Real64(Real64 self);
Real64 panda$core$Real64Wrapper$get_sin_$Rpanda$core$Real64(Real64 self);
Real64 panda$core$Real64Wrapper$get_cos_$Rpanda$core$Real64(Real64 self);
Real64 panda$core$Real64Wrapper$get_tan_$Rpanda$core$Real64(panda$core$Real64Wrapper* self);
panda$core$String* panda$core$Real64Wrapper$convertToString_panda$core$CharWrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_panda$core$Int64Wrapper$Z_Int64_panda$core$String_$Rpanda$core$String(panda$core$Real64Wrapper* self, panda$core$CharWrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, panda$core$Int64Wrapper*, Int64, panda$core$String*);
Bit panda$core$Real64Wrapper$$EQ_panda$core$Object_$Rpanda$core$Bit(panda$core$Real64Wrapper* self, panda$core$Object*);
Int64 panda$core$Real64Wrapper$get_hash_$Rpanda$core$Int64(panda$core$Real64Wrapper* self);
Int8 panda$core$Real64Wrapper$convert_$Rpanda$core$Int8(panda$core$Real64Wrapper* self);
Int16 panda$core$Real64Wrapper$convert_$Rpanda$core$Int16(panda$core$Real64Wrapper* self);
Int32 panda$core$Real64Wrapper$convert_$Rpanda$core$Int32(panda$core$Real64Wrapper* self);
Int64 panda$core$Real64Wrapper$convert_$Rpanda$core$Int64(panda$core$Real64Wrapper* self);
UInt8 panda$core$Real64Wrapper$convert_$Rpanda$core$UInt8(panda$core$Real64Wrapper* self);
UInt16 panda$core$Real64Wrapper$convert_$Rpanda$core$UInt16(panda$core$Real64Wrapper* self);
UInt32 panda$core$Real64Wrapper$convert_$Rpanda$core$UInt32(panda$core$Real64Wrapper* self);
UInt64 panda$core$Real64Wrapper$convert_$Rpanda$core$UInt64(panda$core$Real64Wrapper* self);
Real32 panda$core$Real64Wrapper$convert_$Rpanda$core$Real32(panda$core$Real64Wrapper* self);
Real64 panda$core$Real64Wrapper$convert_$Rpanda$core$Real64(panda$core$Real64Wrapper* self);
panda$core$String* panda$core$Real64Wrapper$convert_$Rpanda$core$String(panda$core$Real64Wrapper* self);
panda$core$String* panda$core$Real64Wrapper$pandaReal64ToString_class_Real64_$Rpanda$core$String(Real64);
void panda$core$Real64Wrapper$$classInit_class();
extern Real64 class_panda$core$Real64Wrapper$E;
extern Real64 class_panda$core$Real64Wrapper$PI;
extern Bit class_panda$core$Real64Wrapper$$classInited;
#endif
#endif
